:root{--color-primary:#0076d6}code[class*=language-],pre[class*=language-]{color:#000;box-shadow:0 14px 25px rgba(0,0,0,.16);font-size:.875em;line-height:1.35}code[class*=language-]::-moz-selection,code[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection{background:#b3d4fc}code[class*=language-]::selection,code[class*=language-] ::selection,pre[class*=language-]::selection,pre[class*=language-] ::selection{background:#b3d4fc}pre[class*=language-]{padding:3em 2.5em 2em}:not(pre)>code[class*=language-],pre[class*=language-]{background:#f5f2f0}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#708090}.token.punctuation{color:#999}.namespace{opacity:.7}.token.boolean,.token.constant,.token.deleted,.token.number,.token.property,.token.symbol,.token.tag{color:#905}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#690}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url{color:#9a6e3a}.token.atrule,.token.attr-value,.token.keyword{color:#07a}.token.class-name,.token.function{color:#dd4a68}.token.important,.token.regex,.token.variable{color:#e90}pre[data-line]{position:relative;padding:1em 0 1em 3em}.line-highlight{position:absolute;left:0;right:0;padding:inherit 0;margin-top:1em;background:rgba(153,122,102,.08);background:linear-gradient(90deg,rgba(153,122,102,.1) 70%,rgba(153,122,102,0));pointer-events:none;line-height:inherit;white-space:pre}.line-highlight:before,.line-highlight[data-end]:after{content:attr(data-start);position:absolute;top:.4em;left:.6em;min-width:1em;padding:0 .5em;background-color:rgba(153,122,102,.4);color:#f5f2f0;font:700 65%/1.5 sans-serif;text-align:center;vertical-align:.3em;border-radius:999px;text-shadow:none;box-shadow:0 1px #fff}.line-highlight[data-end]:after{content:attr(data-end);top:auto;bottom:.4em}.line-numbers .line-highlight:after,.line-numbers .line-highlight:before{content:none}pre[class*=language-].line-numbers{position:relative;padding-left:3.8em;counter-reset:linenumber}pre[class*=language-].line-numbers>code{position:relative;white-space:inherit}.line-numbers .line-numbers-rows{border-right:1px solid #999}.line-numbers-rows>span:before{color:#999}.token a{color:inherit}div.code-toolbar{position:relative}div.code-toolbar>.toolbar{position:absolute;top:0;right:0;left:0;transition:opacity .3s ease-in-out;opacity:1;text-align:right;font-family:sans-serif;font-size:.675em;line-height:1}div.code-toolbar>.toolbar .toolbar-item{padding:.5em 1em}.language-js~.toolbar{background:#eed817;color:#111}.language-scss~.toolbar{background:#c86195;color:#fff}.language-html~.toolbar{background:#ee6534;color:#fff}.language-go~.toolbar{background:#45699b;color:#fff}div.code-toolbar>.toolbar a{cursor:pointer}div.code-toolbar>.toolbar button{background:none;border:0;color:inherit;font:inherit;line-height:normal;overflow:visible;padding:0}.command-line-prompt,div.code-toolbar>.toolbar button{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}.command-line-prompt{border-right:1px solid #999;display:block;float:left;font-size:100%;letter-spacing:-1px;margin-right:1em;pointer-events:none;user-select:none}.command-line-prompt>span:before{color:#999;content:" ";display:block;padding-right:.8em}.command-line-prompt>span[data-user]:before{content:"[" attr(data-user) "@" attr(data-host) "] $"}.command-line-prompt>span[data-user=root]:before{content:"[" attr(data-user) "@" attr(data-host) "] #"}.command-line-prompt>span[data-prompt]:before{content:attr(data-prompt)}code[class*=language-],pre[class*=language-]{color:#abb2bf;background:none;font-family:Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none}code[class*=language-]::-moz-selection,code[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection{text-shadow:none;background:#383e49}code[class*=language-]::selection,code[class*=language-] ::selection,pre[class*=language-]::selection,pre[class*=language-] ::selection{text-shadow:none;background:#9aa2b1}@media print{code[class*=language-],pre[class*=language-]{text-shadow:none}}pre[class*=language-]{overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background:#282c34}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#5c6370}.token.punctuation{color:#abb2bf}.token.selector,.token.tag{color:#e06c75}.token.attr-name,.token.boolean,.token.constant,.token.deleted,.token.number,.token.property,.token.symbol{color:#d19a66}.token.attr-value,.token.builtin,.token.char,.token.inserted,.token.string{color:#98c379}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url{color:#56b6c2}.token.atrule,.token.keyword{color:#c678dd}.token.function{color:#61afef}.token.important,.token.regex,.token.variable{color:#c678dd}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}pre.line-numbers{padding-left:3.8em;counter-reset:linenumber}pre.line-numbers,pre.line-numbers>code{position:relative}.line-numbers .line-numbers-rows{position:absolute;pointer-events:none;top:0;font-size:100%;left:-3.8em;width:3em;letter-spacing:-1px;border-right:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.line-numbers-rows>span{pointer-events:none;display:block;counter-increment:linenumber}.line-numbers-rows>span:before{content:counter(linenumber);color:#5c6370;display:block;padding-right:.8em;text-align:right}html{max-width:100vw;overflow-x:hidden}.uk-offcanvas-container,.uk-offcanvas-page{overflow:hidden}.uk-offcanvas-overlay:before{background:rgba(0,0,0,.75)}.noscroll{overflow-y:hidden!important}:root{font-size:16px}@media (min-width:400px) and (max-width:740px){:root{font-size:calc(16px + 3*(100vw - 400px)/340)}}@media (min-width:740px){:root{font-size:19px}}h1{font-size:26px}@media (min-width:400px) and (max-width:740px){h1{font-size:calc(26px + 20*(100vw - 400px)/340)}}@media (min-width:740px){h1{font-size:46px}}body{font-family:Georgia,Lora,Times New Roman,Times,serif;line-height:1.45em}@media screen and (min-width:22em){body{line-height:calc(.86957vw + 1.2587em)}}@media screen and (min-width:45em){body{line-height:1.65em}}address,dl,fieldset,figure,ol,p,pre,ul{margin:0 0 14px}@media (min-width:400px) and (max-width:740px){address,dl,fieldset,figure,ol,p,pre,ul{margin:0 0 calc(16px + 3*(100vw - 400px)/340)}}@media (min-width:740px){address,dl,fieldset,figure,ol,p,pre,ul{margin:0 0 32px}}*+address,*+dl,*+fieldset,*+figure,*+ol,*+p,*+pre,*+ul{margin-top:0}p:last-child{margin-bottom:0}::-moz-selection{background-color:color(accent,base)}::selection{background-color:color(accent,base)}h1,h2,h3,h4,h5,h6{font-family:Lato,sans-serif;font-weight:700;font-style:normal;line-height:1.04;letter-spacing:-.028em;padding:4px 0;margin-left:-2.5px;line-height:1.14em}@media screen and (min-width:22em){h1,h2,h3,h4,h5,h6{line-height:calc(.47826vw + 1.03478em)}}@media screen and (min-width:45em){h1,h2,h3,h4,h5,h6{line-height:1.25em}}h1,h2,h3,h4,h5,h6{margin:0 0 20px}*+h1,*+h2,*+h3,*+h4,*+h5,*+h6{margin-top:40px}.uk-sticky-fixed{margin:0 0 0 -2.5px!important}.uk-description-list>dt,.uk-description-list dd{font-family:sans-serif}.uk-description-list dd{color:#666;font-size:14px;font-weight:400;line-height:1.35;letter-spacing:.125px}.uk-text-lead{font-family:sans-serif;font-weight:300;line-height:1.3454;letter-spacing:-.865px}em{color:inherit}strong{color:#222}.uk-article-meta{color:#757575}pre{background:rgba(0,0,0,.05)}:not(pre)>code,:not(pre)>kbd,:not(pre)>samp{color:inherit;word-break:break-word;word-wrap:break-word;white-space:pre-wrap}blockquote{border-left:4px solid rgba(0,0,0,.8);font-size:1.05rem;font-style:italic;letter-spacing:.01rem;line-height:1.4625;margin-left:4px;opacity:.825;padding:0 0 2px 20px}@media (min-width:740px){blockquote{margin-left:0}}a,a:link,a:visited{color:var(--color-primary);text-decoration:underline;position:relative;transition:all .15s cubic-bezier(.86,0,.07,1);transition-timing-function:cubic-bezier(.86,0,.07,1)}a:focus,a:hover,a:link:focus,a:link:hover,a:visited:focus,a:visited:hover{color:#000;text-decoration:none}a.token,a:link.token,a:visited.token{color:inherit}.animation-delay-1 .elementor-row>.elementor-column:first-child{-webkit-animation-delay:.2s;animation-delay:.2s}.animation-delay-1 .elementor-row>.elementor-column:nth-child(2){-webkit-animation-delay:.4s;animation-delay:.4s}.animation-delay-2 .elementor-row>.elementor-column:first-child{-webkit-animation-delay:.2s;animation-delay:.2s}.animation-delay-2 .elementor-row>.elementor-column:nth-child(2){-webkit-animation-delay:.4s;animation-delay:.4s}.animation-delay-3 .elementor-row>.elementor-column:first-child{-webkit-animation-delay:.2s;animation-delay:.2s}.animation-delay-3 .elementor-row>.elementor-column:nth-child(2){-webkit-animation-delay:.4s;animation-delay:.4s}.animation-delay-3 .elementor-row>.elementor-column:nth-child(3){-webkit-animation-delay:.6s;animation-delay:.6s}.animation-delay-4 .elementor-row>.elementor-column:first-child{-webkit-animation-delay:.2s;animation-delay:.2s}.animation-delay-4 .elementor-row>.elementor-column:nth-child(2){-webkit-animation-delay:.4s;animation-delay:.4s}.animation-delay-4 .elementor-row>.elementor-column:nth-child(3){-webkit-animation-delay:.6s;animation-delay:.6s}.animation-delay-4 .elementor-row>.elementor-column:nth-child(4){-webkit-animation-delay:.8s;animation-delay:.8s}.pansky-border-muted{border:1px solid color(grey,light)}.wep-display-block{display:block!important}.wep-display-flex{display:flex!important}.fade-enter-active,.fade-leave-active{transition:opacity .5s}.fade-enter,.fade-leave-to{opacity:0}.caption-z-depth-1 img,.z-depth-1{box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);transition:all .3s cubic-bezier(.25,.8,.25,1)}.caption-z-depth-2 img,.z-depth-2{box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);transition:all .3s cubic-bezier(.25,.8,.25,1)}.caption-z-depth-3 img,.z-depth-3{box-shadow:0 10px 20px rgba(0,0,0,.19),0 6px 6px rgba(0,0,0,.23);transition:all .3s cubic-bezier(.25,.8,.25,1)}.caption-z-depth-4 img,.z-depth-4{box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22);transition:all .3s cubic-bezier(.25,.8,.25,1)}.caption-z-depth-5 img,.z-depth-5{box-shadow:0 19px 38px rgba(0,0,0,.3),0 15px 12px rgba(0,0,0,.22);transition:all .3s cubic-bezier(.25,.8,.25,1)}.caption-uk-box-shadow-small img{box-shadow:0 2px 8px rgba(0,0,0,.08)}.caption-uk-box-shadow-medium img{box-shadow:0 5px 15px rgba(0,0,0,.08)}.caption-uk-box-shadow-large img{box-shadow:0 14px 25px rgba(0,0,0,.16)}.caption-uk-box-shadow-xlarge img{box-shadow:0 28px 50px rgba(0,0,0,.16)}.wep-box-shadow-bottom{display:inline-block;position:relative;max-width:100%;vertical-align:middle}.wep-box-shadow-bottom:before{content:"";position:absolute;bottom:30px;left:10px;right:10px;height:30px;border-radius:100%;background:#999;-webkit-filter:blur(6px);filter:blur(6px)}.truncate{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.navbar{background:#0076d6;display:flex;position:relative}.navbar-nav{display:flex;margin:0;padding:0;list-style-type:none}.navbar-nav li:after,.navbar-nav li:before{content:none}.navbar-nav>li{padding:0}.navbar-nav>li:nth-child(n+2),.navbar-nav>li>ul{margin:0}.navbar-left{width:100%;text-align:center}@media (min-width:640px){.navbar-left{width:auto;text-align:left}}.navbar-right{flex-wrap:wrap;margin-left:auto}.navbar a.author{font-weight:700;letter-spacing:.075px}.navbar a{align-items:center;box-sizing:border-box;color:#fff;display:flex;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;font-size:.725rem;height:44px;justify-content:center;opacity:.675;padding:0 15px;text-decoration:none}.navbar a:focus,.navbar a:hover{color:#fff;opacity:1}.project{position:relative;transition:.2s ease-in-out}.project>a{display:block}.project-client{width:100%;font-size:12px;line-height:1.25;display:flex;flex-direction:row;align-items:flex-start;justify-content:flex-start;margin-bottom:16px}.project-client-avatar{border-radius:50%;background-size:cover;background-position:50%;width:30px;height:30px;flex:0 0 auto;align-self:flex-start;margin-right:8px}.project-client-info{letter-spacing:.25px;display:flex;flex-direction:column;align-items:flex-start;justify-content:center}.project-client-info-top{color:#595959;font-family:sans-serif;text-transform:uppercase}.project-client-info-bottom{color:#222;font-family:Verdana,sans-serif}.project-image-container{margin-bottom:16px;overflow:hidden;transition:all .75s cubic-bezier(.86,0,.07,1);transition-timing-function:cubic-bezier(.86,0,.07,1);height:150px}@media (min-width:412px){.project-image-container{height:200px}}@media (min-width:640px){.project-image-container.large{height:350px}}.project-image{width:100%;height:100%;box-shadow:inset 0 0 0 0 hsla(0,0%,100%,.45);transition:all .6s cubic-bezier(.86,0,.07,1);transition-timing-function:cubic-bezier(.86,0,.07,1)}.project-image-fullwidth{background-color:#fff;box-shadow:none;transition:initial}.project-header{margin-bottom:8px}.project-category{padding:0;margin:0 0 6px;color:#333;border-bottom:1px solid #555;font-family:sans-serif;font-size:10px;line-height:1.5;display:inline-block;letter-spacing:2px;text-transform:uppercase;max-width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.project-title{font-weight:500;font-size:18px;line-height:1.25;padding:0;margin:0 0 8px}.project-title a,.project-title a:link,.project-title a:visited{color:#333;text-decoration:none;transition:.3s ease}.project-title a:after,.project-title a:before,.project-title a:link:after,.project-title a:link:before,.project-title a:visited:after,.project-title a:visited:before{content:none}.project-title a:focus,.project-title a:hover,.project-title a:link:focus,.project-title a:link:hover,.project-title a:visited:focus,.project-title a:visited:hover{color:color(accent,base)}.project-name{font:normal 15px/1.4 sans-serif;margin:0}.project-body{font-family:sans-serif;font-weight:400;font-size:14px;line-height:1.45;margin-bottom:20px;overflow:hidden}.project-body a:before,.project-body a:focus:after,.project-body a:hover:after,.project-body a:link:before,.project-body a:link:focus:after,.project-body a:link:hover:after,.project-body a:visited:before,.project-body a:visited:focus:after,.project-body a:visited:hover:after{right:8px}.project-details{font-family:sans-serif;font-size:12px}.project-button{padding:0 20px 0 24px}.project .project-image-fullwidth{position:relative}.project .project-image-fullwidth:after{background-color:hsla(0,0%,100%,.765);width:100%;min-width:100%;max-width:100%;height:100%;min-height:100%;max-height:100%;position:absolute;top:0;right:0;bottom:0;left:0}@media (min-width:640px){.project .project-image-fullwidth:after{content:none}}.project .project-fullwidth-info-light-bg{background:hsla(0,0%,100%,.925);border:1px solid hsla(0,0%,100%,.915)}.project:focus .project-image-fullwidth,.project:hover .project-image-fullwidth{box-shadow:none}table:not(.js-file-line-container){border-collapse:collapse;border-spacing:0;width:100%;margin-bottom:20px;font-size:.875em;line-height:1.04;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif}table:not(.js-file-line-container)+table{margin-top:20px}table:not(.js-file-line-container) th{padding:16px 12px;text-align:left;vertical-align:bottom;font-size:12px;font-weight:400;color:#999;text-transform:uppercase}table:not(.js-file-line-container) td{padding:16px 12px;vertical-align:top}table:not(.js-file-line-container) td>:last-child{margin-bottom:0}table:not(.js-file-line-container) tfoot{font-size:14px}table:not(.js-file-line-container)>:first-child>tr:not(:first-child),table:not(.js-file-line-container)>:not(:first-child)>tr,table:not(.js-file-line-container)>tr:not(:first-child){border-top:1px solid #e5e5e5}@media (max-width:959px){table:not(.js-file-line-container) tbody,table:not(.js-file-line-container) td,table:not(.js-file-line-container) th,table:not(.js-file-line-container) tr{display:block}table:not(.js-file-line-container) thead{display:none}table:not(.js-file-line-container) td,table:not(.js-file-line-container) th{width:auto;max-width:none;min-width:0;overflow:visible;white-space:normal}table:not(.js-file-line-container) td:not(:first-child){padding-top:5px}table:not(.js-file-line-container) td:not(:last-child){padding-bottom:5px}table:not(.js-file-line-container) td,table:not(.js-file-line-container) th{padding-left:0;padding-right:0}}ul{list-style:none;padding:0}ul>li{padding-left:calc(1.5em + 10px);position:relative}ul>li:after,ul>li:before{content:"";display:table}ul>li:before{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='6' height='6' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle fill='%23666' cx='3' cy='3' r='3'/%3E%3C/svg%3E");background-position:50% 50%;background-repeat:no-repeat;content:"";display:block;height:1.5em;left:0;position:absolute;top:0;width:1.5em}ul>li:after{clear:both}ul>li>:last-child{margin-bottom:0}ul ul{list-style:none;margin:0;padding-left:30px}ul>li:nth-child(n+2),ul>li>ul{margin-top:10px}.toc{display:none;font-family:Lato,sans-serif;font-size:.75rem;height:100%;left:auto;line-height:1.5;position:fixed;margin:84px 0;right:0;top:0;transition:margin .9s cubic-bezier(.25,.8,.25,1)}.toc.scrolled{margin:24px 0}.toc ul{list-style:none}.toc ul ul{padding-left:0}.toc ul ul ul{padding-left:20px}.toc ul>li{padding-left:0}.toc ul>li:nth-child(n+2),.toc ul>li>ul{margin-top:4px}.toc li{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.toc li:before{background:none}.toc a{color:initial;display:block;text-decoration:none}.toc a:focus,.toc a:hover{opacity:.65}.toc .uk-active>a{border-left:2px solid #0076d6;color:#0076d6;padding-left:10px}@media (min-width:768px){.toc{display:block;width:18vw}}@media (min-width:960px){.toc{width:24.725vw}}.container{box-sizing:content-box;max-width:1380px;margin-left:auto;margin-right:auto;padding-left:15px;padding-right:15px}@media (min-width:640px){.container{padding-left:30px;padding-right:30px}}@media (min-width:960px){.container{padding-left:40px;padding-right:40px}}.container:after,.container:before{content:"";display:table}.container:after{clear:both}.container>:last-child{margin-bottom:0}.container .uk-container{padding-left:0;padding-right:0}.push-left{max-width:100vw;margin:0 auto}@media (min-width:768px){.push-left{margin:0 auto 0 0;max-width:70vw}}@media (min-width:960px){.push-left{margin:0 auto 0 0;max-width:65vw}}@media (min-width:1200px){.push-left{margin:0 30vw 0 auto;max-width:45vw}}.article{margin:40px 0}.article h1,.article h2,.article h3,.article h4,.article h5,.article h6{margin-top:20px;padding-top:20px}.article img{box-shadow:0 14px 25px rgba(0,0,0,.16)}.article li{line-height:1.5}.article li>strong{font-family:-apple-system,BlinkMacSystemFont,Lato,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif}.article .client-block{display:flex;flex-flow:row nowrap;align-items:center;justify-content:flex-start}.article .client-block .avatar{border-radius:100%;box-shadow:none;display:block;height:60px;vertical-align:middle;width:60px}.article .client-block .meta{font:normal 13px/1.4 sans-serif;letter-spacing:.065px;padding-left:15px}.article .client-block .client,.article .client-block .description{margin:0}.article .client-block .client{color:#111}.article .client-block .description{color:#595959}.article .lead{font-family:sans-serif;color:#333;font-size:1.5rem;font-weight:300;letter-spacing:-.865px;line-height:1.3454;margin:0 0 20px}.article .date,.article .info{color:#757575;font:normal .75rem/1.4 sans-serif;letter-spacing:.065px;margin:0 0 10px}.article .hero{color:#595959;font:normal 14px/1.25 sans-serif;letter-spacing:.265px;margin:40px auto;padding:0;text-align:center;width:100%}.article .hero .figure{display:block;margin:0}.article .hero .image{border-style:none;box-shadow:0 5px 15px rgba(0,0,0,.08);margin:auto;max-width:90vw;-webkit-transform:translateX(0);transform:translateX(0);transition:.1s ease-in-out;width:100%}.article .hero .caption{margin-top:8px}.article .content,.article .footer{margin:40px auto}.article .sources h2{font-size:1em;margin-bottom:8px}.article .sources li{font-size:.875em;line-height:1.25}.article .sources ul>li:nth-child(n+2){margin-top:6px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNzcy9hYnN0cmFjdHMvX2RlZmluaXRpb25zLnNjc3MiLCJjc3MvbWFpbi5taW4uY3NzIiwiY3NzL3ZlbmRvcnMvX3ByaXNtLnNjc3MiLCJjc3MvdmVuZG9ycy9fcHJpc20tYXRvbS1kYXJrLnNjc3MiLCJjc3MvYmFzZS9fcmVzZXRzLnNjc3MiLCJjc3MvYmFzZS9fdHlwb2dyYXBoeS5zY3NzIiwiY3NzL2Jhc2UvX2xpbmtzLnNjc3MiLCJjc3MvdXRpbGl0aWVzL19hbmltYXRpb25zLnNjc3MiLCJjc3MvdXRpbGl0aWVzL19ib3JkZXIuc2NzcyIsImNzcy91dGlsaXRpZXMvX2Rpc3BsYXkuc2NzcyIsImNzcy91dGlsaXRpZXMvX3NoYWRvd3Muc2NzcyIsImNzcy9hYnN0cmFjdHMvX2NvbmZpZy5zY3NzIiwiY3NzL3V0aWxpdGllcy9fIW1vZHVsZS5zY3NzIiwiY3NzL2NvbXBvbmVudHMvX25hdi5zY3NzIiwiY3NzL2NvbXBvbmVudHMvX3Byb2plY3RzLWxpc3Quc2NzcyIsImNzcy9jb21wb25lbnRzL190YWJsZXMuc2NzcyIsImNzcy9jb21wb25lbnRzL19saXN0LnNjc3MiLCJjc3MvY29tcG9uZW50cy9fdG9jLnNjc3MiLCJjc3MvbGF5b3V0L19jb250YWluZXIuc2NzcyIsImNzcy9wYWdlcy9fYXJ0aWNsZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BLE1BQ0ksdUJDTEosQ0NLQSw2Q0FFSSxVQUFZLENBRVosc0NBQTJDLENBRTNDLGdCQUFrQixDQU1sQixnQkRZSixDQ0FBLDRKQUtJLGtCREdKLENDQUEsd0lBS0ksa0JER0osQ0NRQSxzQkFDSSxxQkRJSixDQ0NBLHVEQUVJLGtCREVKLENDUUEseURBSUksYURFSixDQ0NBLG1CQUNJLFVERUosQ0NDQSxXQUNJLFVERUosQ0NDQSxxR0FPSSxVREVKLENDQ0EsMEZBTUksVURFSixDQ0NBLDBGQUtJLGFERUosQ0NFQSwrQ0FHSSxVRENKLENDRUEsa0NBRUksYURDSixDQ0VBLDhDQUdJLFVE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a0JBQW1CLENBQ25CLDBCbEI0N0NSLENrQnI5Q0EsK0JBNEJZLGtCQUFtQixDQUNuQixlQUFnQixDQUNoQixhQUFjLENBQ2QsV0FBWSxDQUNaLHFCQUFzQixDQUN0QixVbEI2N0NaLENrQjk5Q0EsNkJBcUNZLCtCQUFnQyxDQUNoQyxxQkFBdUIsQ0FDdkIsaUJsQjY3Q1osQ2tCcCtDQSxtRUE0Q1ksUWxCNjdDWixDa0J6K0NBLCtCQWdEWSxVbEI2N0NaLENrQjcrQ0Esb0NBb0RZLGFsQjY3Q1osQ2tCai9DQSxlQXlEUSxzQkFBdUIsQ0FDdkIsVUFBVyxDQUNYLGdCQUFpQixDQUNqQixlQUFnQixDQUNoQixzQkFBd0IsQ0FDeEIsa0JBQW1CLENBQ25CLGVsQjQ3Q1IsQ2tCMy9DQSw4QkFvRVEsYUFBYyxDQUNkLGlDQUFtQyxDQUNuQyxxQkFBdUIsQ0FDdkIsZWxCNDdDUixDa0JuZ0RBLGVBMkVRLGFBQWMsQ0FDZCxnQ0FBaUMsQ0FDakMscUJBQXVCLENBQ3ZCLGdCQUFpQixDQUNqQixTQUFVLENBQ1YsaUJBQWtCLENBQ2xCLFVsQjQ3Q1IsQ2tCN2dEQSx1QkFvRlksYUFBYyxDQUNkLFFsQjY3Q1osQ2tCbGhEQSxzQkF5RlksaUJBQWtCLENBQ2xCLHFDQUEwQyxDQUMxQyxXQUFZLENBQ1osY0FBZSxDQUNmLCtCQUF3QixDQUF4Qix1QkFBd0IsQ0FDeEIsMEJBQTRCLENBQzVCLFVsQjY3Q1osQ2tCNWhEQSx3QkFtR1ksY2xCNjdDWixDa0JoaURBLG1DQXlHUSxnQmxCNDdDUixDa0JyaURBLHFCQThHWSxhQUFjLENBQ2QsaUJsQjI3Q1osQ2tCMWlEQSxxQkFtSFksZ0JBQWtCLENBQ2xCLGdCbEIyN0NaLENrQi9pREEsdUNBd0hZLGNsQjI3Q1oiLCJmaWxlIjoiY3NzL21haW4ubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAjIERFRklOSVRJT05TXG4vL1xuLy8gSGVyZSBhcmUgYWxsIHRoZSB2YXJpYWJsZSBkZWZpbml0aW9ucyB0byB1c2UgdGhyb3VnaG91dCBvdXIgU0NTU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuXG46cm9vdCB7XG4gICAgLS1jb2xvci1wcmltYXJ5OiAjMDA3NkQ2O1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIyBDT0xPUlNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4kU2NpZW5jZUJsdWU6ICAgICAgICAgICAgICAgICAgICMwMDc2RDY7XG4kRWFzdGVybkJsdWU6ICAgICAgICAgICAgICAgICAgICMxRkE1QjM7XG4kVGFjaGE6ICAgICAgICAgICAgICAgICAgICAgICAgICNEM0JDNjQ7XG5cbiRCbGFjazogICAgICAgICAgICAgICAgICAgICAgICAgIzAwMDtcbiRNaW5lU2hhZnQ6ICAgICAgICAgICAgICAgICAgICAgIzIyMjtcblxuJFdoaXRlOiAgICAgICAgICAgICAgICAgICAgICAgICAjZmZmO1xuXG4kQm91bGRlcjogICAgICAgICAgICAgICAgICAgICAgICNmZmY7XG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICMjIENPTE9SUyA9PiBBdG9tIE9uZSBEYXJrXG4kYXRvbS1iYXNlOiAgICAjMjgyYzM0O1xuJGF0b20tbW9uby0xOiAgI2FiYjJiZjtcbiRhdG9tLW1vbm8tMjogICM4MTg4OTY7XG4kYXRvbS1tb25vLTM6ICAjNWM2MzcwO1xuJGF0b20taHVlLTE6ICAgIzU2YjZjMjtcbiRhdG9tLWh1ZS0yOiAgICM2MWFlZWU7XG4kYXRvbS1odWUtMzogICAjYzY3OGRkO1xuJGF0b20taHVlLTQ6ICAgIzk4YzM3OTtcbiRhdG9tLWh1ZS01OiAgICNlMDZjNzU7XG4kYXRvbS1odWUtNS0yOiAjYmU1MDQ2O1xuJGF0b20taHVlLTY6ICAgI2QxOWE2NjtcbiRhdG9tLWh1ZS02LTI6ICNlNmMwN2I7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyBDT0xPUlMgPT4gUHJvamVjdHMvQ2xpZW50c1xuJGNvbG9yLWRnd2MtcHJpbWFyeTogICAgICAgICAgICAjZjZiMmQwICFkZWZhdWx0O1xuJGNvbG9yLW1hYS1wcmltYXJ5OiAgICAgICAgICAgICAjMDA1M2EwICFkZWZhdWx0O1xuJGNvbG9yLW1hYS1hbHQ6ICAgICAgICAgICAgICAgICAjMGU3NWRkICFkZWZhdWx0O1xuJGNvbG9yLWdvb2QtcHJpbWFyeTogICAgICAgICAgICAjMUEwNkQwICFkZWZhdWx0O1xuJGNvbG9yLWdvb2QtYWx0OiAgICAgICAgICAgICAgICAjNjI4Y2M5ICFkZWZhdWx0O1xuJGNvbG9yLWx1bmNoLXByaW1hcnk6ICAgICAgICAgICAjOTIwZTlkICFkZWZhdWx0O1xuXG5cblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIyBUWVBPR1JBUEhZXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuJGZvbnQtc2VyaWY6ICAgIEdlb3JnaWEsICdMb3JhJywgJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcbiRmb250LXNhbnM6ICAgICAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdMYXRvJywgJ1NlZ29lIFVJJywgUm9ib3RvLFxuICAgICAgICAgICAgICAgICdIZWx2ZXRpY2EgTmV1ZScsIEFyaWFsLCBzYW5zLXNlcmlmOyIsIkBjaGFyc2V0IFwiVVRGLThcIjtcbjpyb290IHtcbiAgLS1jb2xvci1wcmltYXJ5OiAjMDA3NkQ2O1xufVxuXG4vKiBQcmlzbUpTIDEuMTYuMFxuaHR0cHM6Ly9wcmlzbWpzLmNvbS9kb3dubG9hZC5odG1sI3RoZW1lcz1wcmlzbSZsYW5ndWFnZXM9bWFya3VwK2NzcytjbGlrZStqYXZhc2NyaXB0K2FwYWNoZWNvbmYrYmFzaCtkaWZmK2dpdCtnbytqYXZhZG9jbGlrZStqc29uK21hcmtkb3duK3R5cGVzY3JpcHQranNkb2Mrc2Nzcytqc3grdHN4K3JlZ2V4JnBsdWdpbnM9bGluZS1oaWdobGlnaHQrbGluZS1udW1iZXJzK2F1dG9saW5rZXIrdG9vbGJhcitoaWdobGlnaHQta2V5d29yZHMrY29tbWFuZC1saW5lK3Nob3ctbGFuZ3VhZ2UgKi9cbi8qKlxuICogcHJpc20uanMgZGVmYXVsdCB0aGVtZSBmb3IgSmF2YVNjcmlwdCwgQ1NTIGFuZCBIVE1MXG4gKiBCYXNlZCBvbiBkYWJibGV0IChodHRwOi8vZGFiYmxldC5jb20pXG4gKiBAYXV0aG9yIExlYSBWZXJvdVxuICovXG5jb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10sXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSB7XG4gIGNvbG9yOiBibGFjaztcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm94LXNoYWRvdzogMCAxNHB4IDI1cHggcmdiYSgwLCAwLCAwLCAwLjE2KTtcbiAgZm9udC1mYW1pbHk6IENvbnNvbGFzLCBNb25hY28sICdBbmRhbGUgTW9ubycsICdVYnVudHUgTW9ubycsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAwLjg3NWVtO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB3aGl0ZS1zcGFjZTogcHJlO1xuICB3b3JkLXNwYWNpbmc6IG5vcm1hbDtcbiAgd29yZC1icmVhazogbm9ybWFsO1xuICB3b3JkLXdyYXA6IG5vcm1hbDtcbiAgbGluZS1oZWlnaHQ6IDEuMzU7XG4gIC1tb3otdGFiLXNpemU6IDQ7XG4gIC1vLXRhYi1zaXplOiA0O1xuICB0YWItc2l6ZTogNDtcbiAgLXdlYmtpdC1oeXBoZW5zOiBub25lO1xuICAtbW96LWh5cGhlbnM6IG5vbmU7XG4gIC1tcy1oeXBoZW5zOiBub25lO1xuICBoeXBoZW5zOiBub25lO1xufVxuXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXTo6LW1vei1zZWxlY3Rpb24sXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSA6Oi1tb3otc2VsZWN0aW9uLFxuY29kZVtjbGFzcyo9J2xhbmd1YWdlLSddOjotbW96LXNlbGVjdGlvbixcbmNvZGVbY2xhc3MqPSdsYW5ndWFnZS0nXSA6Oi1tb3otc2VsZWN0aW9uIHtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XG59XG5cbnByZVtjbGFzcyo9J2xhbmd1YWdlLSddOjpzZWxlY3Rpb24sXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSA6OnNlbGVjdGlvbixcbmNvZGVbY2xhc3MqPSdsYW5ndWFnZS0nXTo6c2VsZWN0aW9uLFxuY29kZVtjbGFzcyo9J2xhbmd1YWdlLSddIDo6c2VsZWN0aW9uIHtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XG59XG5cbkBtZWRpYSBwcmludCB7XG4gIGNvZGVbY2xhc3MqPSdsYW5ndWFnZS0nXSxcbiAgcHJlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10ge1xuICAgIHRleHQtc2hhZG93OiBub25lO1xuICB9XG59XG5cbi8qIENvZGUgYmxvY2tzICovXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSB7XG4gIHBhZGRpbmc6IDNlbSAyLjVlbSAyZW0gMi41ZW07XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG46bm90KHByZSkgPiBjb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10sXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSB7XG4gIGJhY2tncm91bmQ6ICNmNWYyZjA7XG59XG5cbi8qIElubGluZSBjb2RlICovXG46bm90KHByZSkgPiBjb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10ge1xuICBwYWRkaW5nOiAwLjFlbTtcbiAgYm9yZGVyLXJhZGl1czogMC4zZW07XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG59XG5cbi50b2tlbi5jb21tZW50LFxuLnRva2VuLnByb2xvZyxcbi50b2tlbi5kb2N0eXBlLFxuLnRva2VuLmNkYXRhIHtcbiAgY29sb3I6IHNsYXRlZ3JheTtcbn1cblxuLnRva2VuLnB1bmN0dWF0aW9uIHtcbiAgY29sb3I6ICM5OTk7XG59XG5cbi5uYW1lc3BhY2Uge1xuICBvcGFjaXR5OiAwLjc7XG59XG5cbi50b2tlbi5wcm9wZXJ0eSxcbi50b2tlbi50YWcsXG4udG9rZW4uYm9vbGVhbixcbi50b2tlbi5udW1iZXIsXG4udG9rZW4uY29uc3RhbnQsXG4udG9rZW4uc3ltYm9sLFxuLnRva2VuLmRlbGV0ZWQge1xuICBjb2xvcjogIzkwNTtcbn1cblxuLnRva2VuLnNlbGVjdG9yLFxuLnRva2VuLmF0dHItbmFtZSxcbi50b2tlbi5zdHJpbmcsXG4udG9rZW4uY2hhcixcbi50b2tlbi5idWlsdGluLFxuLnRva2VuLmluc2VydGVkIHtcbiAgY29sb3I6ICM2OTA7XG59XG5cbi50b2tlbi5vcGVyYXRvcixcbi50b2tlbi5lbnRpdHksXG4udG9rZW4udXJsLFxuLmxhbmd1YWdlLWNzcyAudG9rZW4uc3RyaW5nLFxuLnN0eWxlIC50b2tlbi5zdHJpbmcge1xuICBjb2xvcjogIzlhNmUzYTtcbn1cblxuLnRva2VuLmF0cnVsZSxcbi50b2tlbi5hdHRyLXZhbHVlLFxuLnRva2VuLmtleXdvcmQge1xuICBjb2xvcjogIzA3YTtcbn1cblxuLnRva2VuLmZ1bmN0aW9uLFxuLnRva2VuLmNsYXNzLW5hbWUge1xuICBjb2xvcjogI2RkNGE2ODtcbn1cblxuLnRva2VuLnJlZ2V4LFxuLnRva2VuLmltcG9ydGFudCxcbi50b2tlbi52YXJpYWJsZSB7XG4gIGNvbG9yOiAjZTkwO1xufVxuXG4udG9rZW4uaW1wb3J0YW50LFxuLnRva2VuLmJvbGQge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnRva2VuLml0YWxpYyB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLnRva2VuLmVudGl0eSB7XG4gIGN1cnNvcjogaGVscDtcbn1cblxucHJlW2RhdGEtbGluZV0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDFlbSAwIDFlbSAzZW07XG59XG5cbi5saW5lLWhpZ2hsaWdodCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHBhZGRpbmc6IGluaGVyaXQgMDtcbiAgbWFyZ2luLXRvcDogMWVtO1xuICAvKiBTYW1lIGFzIC5wcmlzbeKAmXMgcGFkZGluZy10b3AgKi9cbiAgYmFja2dyb3VuZDogcmdiYSgxNTMsIDEyMiwgMTAyLCAwLjA4KTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2JhKDE1MywgMTIyLCAxMDIsIDAuMSkgNzAlLCByZ2JhKDE1MywgMTIyLCAxMDIsIDApKTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICB3aGl0ZS1zcGFjZTogcHJlO1xufVxuXG4ubGluZS1oaWdobGlnaHQ6YmVmb3JlLFxuLmxpbmUtaGlnaGxpZ2h0W2RhdGEtZW5kXTphZnRlciB7XG4gIGNvbnRlbnQ6IGF0dHIoZGF0YS1zdGFydCk7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwLjRlbTtcbiAgbGVmdDogMC42ZW07XG4gIG1pbi13aWR0aDogMWVtO1xuICBwYWRkaW5nOiAwIDAuNWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE1MywgMTIyLCAxMDIsIDAuNCk7XG4gIGNvbG9yOiAjZjVmMmYwO1xuICBmb250OiBib2xkIDY1JS8xLjUgc2Fucy1zZXJpZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB2ZXJ0aWNhbC1hbGlnbjogMC4zZW07XG4gIGJvcmRlci1yYWRpdXM6IDk5OXB4O1xuICB0ZXh0LXNoYWRvdzogbm9uZTtcbiAgYm94LXNoYWRvdzogMCAxcHggd2hpdGU7XG59XG5cbi5saW5lLWhpZ2hsaWdodFtkYXRhLWVuZF06YWZ0ZXIge1xuICBjb250ZW50OiBhdHRyKGRhdGEtZW5kKTtcbiAgdG9wOiBhdXRvO1xuICBib3R0b206IDAuNGVtO1xufVxuXG4ubGluZS1udW1iZXJzIC5saW5lLWhpZ2hsaWdodDpiZWZvcmUsXG4ubGluZS1udW1iZXJzIC5saW5lLWhpZ2hsaWdodDphZnRlciB7XG4gIGNvbnRlbnQ6IG5vbmU7XG59XG5cbnByZVtjbGFzcyo9J2xhbmd1YWdlLSddLmxpbmUtbnVtYmVycyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1sZWZ0OiAzLjhlbTtcbiAgY291bnRlci1yZXNldDogbGluZW51bWJlcjtcbn1cblxucHJlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10ubGluZS1udW1iZXJzID4gY29kZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2hpdGUtc3BhY2U6IGluaGVyaXQ7XG59XG5cbi5saW5lLW51bWJlcnMgLmxpbmUtbnVtYmVycy1yb3dzIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgdG9wOiAwO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGxlZnQ6IC0zLjhlbTtcbiAgd2lkdGg6IDNlbTtcbiAgLyogd29ya3MgZm9yIGxpbmUtbnVtYmVycyBiZWxvdyAxMDAwIGxpbmVzICovXG4gIGxldHRlci1zcGFjaW5nOiAtMXB4O1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjOTk5O1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG4ubGluZS1udW1iZXJzLXJvd3MgPiBzcGFuIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb3VudGVyLWluY3JlbWVudDogbGluZW51bWJlcjtcbn1cblxuLmxpbmUtbnVtYmVycy1yb3dzID4gc3BhbjpiZWZvcmUge1xuICBjb250ZW50OiBjb3VudGVyKGxpbmVudW1iZXIpO1xuICBjb2xvcjogIzk5OTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmctcmlnaHQ6IDAuOGVtO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLnRva2VuIGEge1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuZGl2LmNvZGUtdG9vbGJhciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuZGl2LmNvZGUtdG9vbGJhciA+IC50b29sYmFyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBsZWZ0OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZS1pbi1vdXQ7XG4gIG9wYWNpdHk6IDE7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAwLjY3NWVtO1xuICBsaW5lLWhlaWdodDogMTtcbn1cblxuZGl2LmNvZGUtdG9vbGJhciA+IC50b29sYmFyIC50b29sYmFyLWl0ZW0ge1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG59XG5cbi5sYW5ndWFnZS1qcyB+IC50b29sYmFyIHtcbiAgYmFja2dyb3VuZDogI2VlZDgxNztcbiAgY29sb3I6ICMxMTE7XG59XG5cbi5sYW5ndWFnZS1zY3NzIH4gLnRvb2xiYXIge1xuICBiYWNrZ3JvdW5kOiAjYzg2MTk1O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmxhbmd1YWdlLWh0bWwgfiAudG9vbGJhciB7XG4gIGJhY2tncm91bmQ6ICNlZTY1MzQ7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ubGFuZ3VhZ2UtZ28gfiAudG9vbGJhciB7XG4gIGJhY2tncm91bmQ6ICM0NTY5OWI7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG5kaXYuY29kZS10b29sYmFyID4gLnRvb2xiYXIgYSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuZGl2LmNvZGUtdG9vbGJhciA+IC50b29sYmFyIGJ1dHRvbiB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogMDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBwYWRkaW5nOiAwO1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAvKiBmb3IgYnV0dG9uICovXG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLmNvbW1hbmQtbGluZS1wcm9tcHQge1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjOTk5O1xuICBkaXNwbGF5OiBibG9jaztcbiAgZmxvYXQ6IGxlZnQ7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgbGV0dGVyLXNwYWNpbmc6IC0xcHg7XG4gIG1hcmdpbi1yaWdodDogMWVtO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLmNvbW1hbmQtbGluZS1wcm9tcHQgPiBzcGFuOmJlZm9yZSB7XG4gIGNvbG9yOiAjOTk5O1xuICBjb250ZW50OiAnICc7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nLXJpZ2h0OiAwLjhlbTtcbn1cblxuLmNvbW1hbmQtbGluZS1wcm9tcHQgPiBzcGFuW2RhdGEtdXNlcl06YmVmb3JlIHtcbiAgY29udGVudDogXCJbXCIgYXR0cihkYXRhLXVzZXIpIFwiQFwiIGF0dHIoZGF0YS1ob3N0KSBcIl0gJFwiO1xufVxuXG4uY29tbWFuZC1saW5lLXByb21wdCA+IHNwYW5bZGF0YS11c2VyPSdyb290J106YmVmb3JlIHtcbiAgY29udGVudDogXCJbXCIgYXR0cihkYXRhLXVzZXIpIFwiQFwiIGF0dHIoZGF0YS1ob3N0KSBcIl0gI1wiO1xufVxuXG4uY29tbWFuZC1saW5lLXByb21wdCA+IHNwYW5bZGF0YS1wcm9tcHRdOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IGF0dHIoZGF0YS1wcm9tcHQpO1xufVxuXG4vKipcbiAqIHByaXNtLmpzIGRlZmF1bHQgdGhlbWUgZm9yIEphdmFTY3JpcHQsIENTUyBhbmQgSFRNTFxuICogQmFzZWQgb24gZGFiYmxldCAoaHR0cDovL2RhYmJsZXQuY29tKVxuICogQGF1dGhvciBMZWEgVmVyb3VcbiAqL1xuY29kZVtjbGFzcyo9J2xhbmd1YWdlLSddLFxucHJlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10ge1xuICBjb2xvcjogI2FiYjJiZjtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgZm9udC1mYW1pbHk6IENvbnNvbGFzLCBNb25hY28sICdBbmRhbGUgTW9ubycsICdVYnVudHUgTW9ubycsIG1vbm9zcGFjZTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgd2hpdGUtc3BhY2U6IHByZTtcbiAgd29yZC1zcGFjaW5nOiBub3JtYWw7XG4gIHdvcmQtYnJlYWs6IG5vcm1hbDtcbiAgd29yZC13cmFwOiBub3JtYWw7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIC1tb3otdGFiLXNpemU6IDQ7XG4gIC1vLXRhYi1zaXplOiA0O1xuICB0YWItc2l6ZTogNDtcbiAgLXdlYmtpdC1oeXBoZW5zOiBub25lO1xuICAtbW96LWh5cGhlbnM6IG5vbmU7XG4gIC1tcy1oeXBoZW5zOiBub25lO1xuICBoeXBoZW5zOiBub25lO1xufVxuXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXTo6LW1vei1zZWxlY3Rpb24sXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSA6Oi1tb3otc2VsZWN0aW9uLFxuY29kZVtjbGFzcyo9J2xhbmd1YWdlLSddOjotbW96LXNlbGVjdGlvbixcbmNvZGVbY2xhc3MqPSdsYW5ndWFnZS0nXSA6Oi1tb3otc2VsZWN0aW9uIHtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gIGJhY2tncm91bmQ6ICMzODNlNDk7XG59XG5cbnByZVtjbGFzcyo9J2xhbmd1YWdlLSddOjpzZWxlY3Rpb24sXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSA6OnNlbGVjdGlvbixcbmNvZGVbY2xhc3MqPSdsYW5ndWFnZS0nXTo6c2VsZWN0aW9uLFxuY29kZVtjbGFzcyo9J2xhbmd1YWdlLSddIDo6c2VsZWN0aW9uIHtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gIGJhY2tncm91bmQ6ICM5YWEyYjE7XG59XG5cbkBtZWRpYSBwcmludCB7XG4gIGNvZGVbY2xhc3MqPSdsYW5ndWFnZS0nXSxcbiAgcHJlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10ge1xuICAgIHRleHQtc2hhZG93OiBub25lO1xuICB9XG59XG5cbi8qIENvZGUgYmxvY2tzICovXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG46bm90KHByZSkgPiBjb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10sXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSB7XG4gIGJhY2tncm91bmQ6ICMyODJjMzQ7XG59XG5cbi8qIElubGluZSBjb2RlICovXG46bm90KHByZSkgPiBjb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10ge1xuICBwYWRkaW5nOiAwLjFlbTtcbiAgYm9yZGVyLXJhZGl1czogMC4zZW07XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG59XG5cbi50b2tlbi5jb21tZW50LFxuLnRva2VuLnByb2xvZyxcbi50b2tlbi5kb2N0eXBlLFxuLnRva2VuLmNkYXRhIHtcbiAgY29sb3I6ICM1YzYzNzA7XG59XG5cbi50b2tlbi5wdW5jdHVhdGlvbiB7XG4gIGNvbG9yOiAjYWJiMmJmO1xufVxuXG4udG9rZW4uc2VsZWN0b3IsXG4udG9rZW4udGFnIHtcbiAgY29sb3I6ICNlMDZjNzU7XG59XG5cbi50b2tlbi5wcm9wZXJ0eSxcbi50b2tlbi5ib29sZWFuLFxuLnRva2VuLm51bWJlcixcbi50b2tlbi5jb25zdGFudCxcbi50b2tlbi5zeW1ib2wsXG4udG9rZW4uYXR0ci1uYW1lLFxuLnRva2VuLmRlbGV0ZWQge1xuICBjb2xvcjogI2QxOWE2Njtcbn1cblxuLnRva2VuLnN0cmluZyxcbi50b2tlbi5jaGFyLFxuLnRva2VuLmF0dHItdmFsdWUsXG4udG9rZW4uYnVpbHRpbixcbi50b2tlbi5pbnNlcnRlZCB7XG4gIGNvbG9yOiAjOThjMzc5O1xufVxuXG4udG9rZW4ub3BlcmF0b3IsXG4udG9rZW4uZW50aXR5LFxuLnRva2VuLnVybCxcbi5sYW5ndWFnZS1jc3MgLnRva2VuLnN0cmluZyxcbi5zdHlsZSAudG9rZW4uc3RyaW5nIHtcbiAgY29sb3I6ICM1NmI2YzI7XG59XG5cbi50b2tlbi5hdHJ1bGUsXG4udG9rZW4ua2V5d29yZCB7XG4gIGNvbG9yOiAjYzY3OGRkO1xufVxuXG4udG9rZW4uZnVuY3Rpb24ge1xuICBjb2xvcjogIzYxYWZlZjtcbn1cblxuLnRva2VuLnJlZ2V4LFxuLnRva2VuLmltcG9ydGFudCxcbi50b2tlbi52YXJpYWJsZSB7XG4gIGNvbG9yOiAjYzY3OGRkO1xufVxuXG4udG9rZW4uaW1wb3J0YW50LFxuLnRva2VuLmJvbGQge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnRva2VuLml0YWxpYyB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLnRva2VuLmVudGl0eSB7XG4gIGN1cnNvcjogaGVscDtcbn1cblxucHJlLmxpbmUtbnVtYmVycyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1sZWZ0OiAzLjhlbTtcbiAgY291bnRlci1yZXNldDogbGluZW51bWJlcjtcbn1cblxucHJlLmxpbmUtbnVtYmVycyA+IGNvZGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5saW5lLW51bWJlcnMgLmxpbmUtbnVtYmVycy1yb3dzIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgdG9wOiAwO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGxlZnQ6IC0zLjhlbTtcbiAgd2lkdGg6IDNlbTtcbiAgLyogd29ya3MgZm9yIGxpbmUtbnVtYmVycyBiZWxvdyAxMDAwIGxpbmVzICovXG4gIGxldHRlci1zcGFjaW5nOiAtMXB4O1xuICBib3JkZXItcmlnaHQ6IDA7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbi5saW5lLW51bWJlcnMtcm93cyA+IHNwYW4ge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvdW50ZXItaW5jcmVtZW50OiBsaW5lbnVtYmVyO1xufVxuXG4ubGluZS1udW1iZXJzLXJvd3MgPiBzcGFuOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IGNvdW50ZXIobGluZW51bWJlcik7XG4gIGNvbG9yOiAjNWM2MzcwO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZy1yaWdodDogMC44ZW07XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG5odG1sIHtcbiAgbWF4LXdpZHRoOiAxMDB2dztcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuXG4udWstb2ZmY2FudmFzLWNvbnRhaW5lcixcbi51ay1vZmZjYW52YXMtcGFnZSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi51ay1vZmZjYW52YXMtb3ZlcmxheTo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjc1KTtcbn1cblxuLm5vc2Nyb2xsIHtcbiAgb3ZlcmZsb3cteTogaGlkZGVuICFpbXBvcnRhbnQ7XG59XG5cbjpyb290IHtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNDAwcHgpIGFuZCAobWF4LXdpZHRoOiA3NDBweCkge1xuICA6cm9vdCB7XG4gICAgZm9udC1zaXplOiBjYWxjKCAxNnB4ICsgKDE5IC0gMTYpICogKCgxMDB2dyAtIDQwMHB4KSAvICg3NDAgLSA0MDApKSk7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc0MHB4KSB7XG4gIDpyb290IHtcbiAgICBmb250LXNpemU6IDE5cHg7XG4gIH1cbn1cblxuaDEge1xuICBmb250LXNpemU6IDI2cHg7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0MDBweCkgYW5kIChtYXgtd2lkdGg6IDc0MHB4KSB7XG4gIGgxIHtcbiAgICBmb250LXNpemU6IGNhbGMoIDI2cHggKyAoNDYgLSAyNikgKiAoKDEwMHZ3IC0gNDAwcHgpIC8gKDc0MCAtIDQwMCkpKTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzQwcHgpIHtcbiAgaDEge1xuICAgIGZvbnQtc2l6ZTogNDZweDtcbiAgfVxufVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IEdlb3JnaWEsICdMb3JhJywgJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcbn1cblxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1ZW07XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDIyZW0pIHtcbiAgYm9keSB7XG4gICAgbGluZS1oZWlnaHQ6IGNhbGMoMC44Njk1N3Z3ICsgMS4yNTg3ZW0pO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgYm9keSB7XG4gICAgbGluZS1oZWlnaHQ6IDEuNjVlbTtcbiAgfVxufVxuXG5hZGRyZXNzLFxuZGwsXG5maWVsZHNldCxcbmZpZ3VyZSxcbm9sLFxucCxcbnByZSxcbnVsIHtcbiAgbWFyZ2luOiAwIDAgY2FsYygxNnB4ICogMC44NzUpIDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0MDBweCkgYW5kIChtYXgtd2lkdGg6IDc0MHB4KSB7XG4gIGFkZHJlc3MsXG4gIGRsLFxuICBmaWVsZHNldCxcbiAgZmlndXJlLFxuICBvbCxcbiAgcCxcbiAgcHJlLFxuICB1bCB7XG4gICAgbWFyZ2luOiAwIDAgY2FsYyggMTZweCArICgxOSAtIDE2KSAqICggKDEwMHZ3IC0gNDAwcHgpIC8gKDc0MCAtIDQwMCkgKSkgMDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzQwcHgpIHtcbiAgYWRkcmVzcyxcbiAgZGwsXG4gIGZpZWxkc2V0LFxuICBmaWd1cmUsXG4gIG9sLFxuICBwLFxuICBwcmUsXG4gIHVsIHtcbiAgICBtYXJnaW46IDAgMCBjYWxjKDE2cHggKiAyKSAwO1xuICB9XG59XG5cbiogKyBhZGRyZXNzLFxuKiArIGRsLFxuKiArIGZpZWxkc2V0LFxuKiArIGZpZ3VyZSxcbiogKyBvbCxcbiogKyBwLFxuKiArIHByZSxcbiogKyB1bCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG5cbnA6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IoYWNjZW50LCBiYXNlKTtcbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC1mYW1pbHk6ICdMYXRvJywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgbGluZS1oZWlnaHQ6IDEuMDQ7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4wMjhlbTtcbiAgcGFkZGluZzogNHB4IDA7XG4gIG1hcmdpbi1sZWZ0OiAtMi41cHg7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE0ZW07XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDIyZW0pIHtcbiAgaDEsXG4gIGgyLFxuICBoMyxcbiAgaDQsXG4gIGg1LFxuICBoNiB7XG4gICAgbGluZS1oZWlnaHQ6IGNhbGMoMC40NzgyNnZ3ICsgMS4wMzQ3OGVtKTtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0NWVtKSB7XG4gIGgxLFxuICBoMixcbiAgaDMsXG4gIGg0LFxuICBoNSxcbiAgaDYge1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI1ZW07XG4gIH1cbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgbWFyZ2luOiAwIDAgMjBweCAwO1xufVxuXG4qICsgaDEsXG4qICsgaDIsXG4qICsgaDMsXG4qICsgaDQsXG4qICsgaDUsXG4qICsgaDYge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuXG4udWstc3RpY2t5LWZpeGVkIHtcbiAgbWFyZ2luOiAwIDAgMCAtMi41cHggIWltcG9ydGFudDtcbn1cblxuLnVrLWRlc2NyaXB0aW9uLWxpc3QgPiBkdCxcbi51ay1kZXNjcmlwdGlvbi1saXN0IGRkIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG59XG5cbi51ay1kZXNjcmlwdGlvbi1saXN0IGRkIHtcbiAgY29sb3I6ICM2NjY7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgbGluZS1oZWlnaHQ6IDEuMzU7XG4gIGxldHRlci1zcGFjaW5nOiAwLjEyNXB4O1xufVxuXG4udWstdGV4dC1sZWFkIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjM0NTQ7XG4gIGxldHRlci1zcGFjaW5nOiAtMC44NjVweDtcbn1cblxuZW0ge1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuc3Ryb25nIHtcbiAgY29sb3I6ICMyMjI7XG59XG5cbi51ay1hcnRpY2xlLW1ldGEge1xuICBjb2xvcjogIzc1NzU3NTtcbn1cblxucHJlIHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjA1KTtcbn1cblxuOm5vdChwcmUpID4gY29kZSxcbjpub3QocHJlKSA+IGtiZCxcbjpub3QocHJlKSA+IHNhbXAge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG59XG5cbmJsb2NrcXVvdGUge1xuICBib3JkZXItbGVmdDogNHB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC44KTtcbiAgZm9udC1zaXplOiAxLjA1cmVtO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAxcmVtO1xuICBsaW5lLWhlaWdodDogMS40NjI1O1xuICBtYXJnaW4tbGVmdDogNHB4O1xuICBvcGFjaXR5OiAwLjgyNTtcbiAgcGFkZGluZzogMCAwIDJweCAyMHB4O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzQwcHgpIHtcbiAgYmxvY2txdW90ZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbn1cblxuYSxcbmE6bGluayxcbmE6dmlzaXRlZCB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvci1wcmltYXJ5KTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdHJhbnNpdGlvbjogYWxsIDE1MG1zIGN1YmljLWJlemllcigwLjg2LCAwLCAwLjA3LCAxKTtcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjg2LCAwLCAwLjA3LCAxKTtcbn1cblxuYTpob3ZlciwgYTpmb2N1cyxcbmE6bGluazpob3ZlcixcbmE6bGluazpmb2N1cyxcbmE6dmlzaXRlZDpob3ZlcixcbmE6dmlzaXRlZDpmb2N1cyB7XG4gIGNvbG9yOiBibGFjaztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5hLnRva2VuLFxuYTpsaW5rLnRva2VuLFxuYTp2aXNpdGVkLnRva2VuIHtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG5cbi5hbmltYXRpb24tZGVsYXktMSAuZWxlbWVudG9yLXJvdyA+IC5lbGVtZW50b3ItY29sdW1uOm50aC1jaGlsZCgxKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogMjAwbXM7XG59XG5cbi5hbmltYXRpb24tZGVsYXktMSAuZWxlbWVudG9yLXJvdyA+IC5lbGVtZW50b3ItY29sdW1uOm50aC1jaGlsZCgyKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogNDAwbXM7XG59XG5cbi5hbmltYXRpb24tZGVsYXktMiAuZWxlbWVudG9yLXJvdyA+IC5lbGVtZW50b3ItY29sdW1uOm50aC1jaGlsZCgxKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogMjAwbXM7XG59XG5cbi5hbmltYXRpb24tZGVsYXktMiAuZWxlbWVudG9yLXJvdyA+IC5lbGVtZW50b3ItY29sdW1uOm50aC1jaGlsZCgyKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogNDAwbXM7XG59XG5cbi5hbmltYXRpb24tZGVsYXktMyAuZWxlbWVudG9yLXJvdyA+IC5lbGVtZW50b3ItY29sdW1uOm50aC1jaGlsZCgxKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogMjAwbXM7XG59XG5cbi5hbmltYXRpb24tZGVsYXktMyAuZWxlbWVudG9yLXJvdyA+IC5lbGVtZW50b3ItY29sdW1uOm50aC1jaGlsZCgyKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogNDAwbXM7XG59XG5cbi5hbmltYXRpb24tZGVsYXktMyAuZWxlbWVudG9yLXJvdyA+IC5lbGVtZW50b3ItY29sdW1uOm50aC1jaGlsZCgzKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogNjAwbXM7XG59XG5cbi5hbmltYXRpb24tZGVsYXktNCAuZWxlbWVudG9yLXJvdyA+IC5lbGVtZW50b3ItY29sdW1uOm50aC1jaGlsZCgxKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogMjAwbXM7XG59XG5cbi5hbmltYXRpb24tZGVsYXktNCAuZWxlbWVudG9yLXJvdyA+IC5lbGVtZW50b3ItY29sdW1uOm50aC1jaGlsZCgyKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogNDAwbXM7XG59XG5cbi5hbmltYXRpb24tZGVsYXktNCAuZWxlbWVudG9yLXJvdyA+IC5lbGVtZW50b3ItY29sdW1uOm50aC1jaGlsZCgzKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogNjAwbXM7XG59XG5cbi5hbmltYXRpb24tZGVsYXktNCAuZWxlbWVudG9yLXJvdyA+IC5lbGVtZW50b3ItY29sdW1uOm50aC1jaGlsZCg0KSB7XG4gIGFuaW1hdGlvbi1kZWxheTogODAwbXM7XG59XG5cbi5wYW5za3ktYm9yZGVyLW11dGVkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgY29sb3IoZ3JheSwgbGlnaHQpO1xufVxuXG4ud2VwLWRpc3BsYXktYmxvY2sge1xuICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xufVxuXG4ud2VwLWRpc3BsYXktZmxleCB7XG4gIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcbn1cblxuLmZhZGUtZW50ZXItYWN0aXZlLCAuZmFkZS1sZWF2ZS1hY3RpdmUge1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IC41cztcbn1cblxuLmZhZGUtZW50ZXIsIC5mYWRlLWxlYXZlLXRvIHtcbiAgb3BhY2l0eTogMDtcbn1cblxuLnotZGVwdGgtMSwgLmNhcHRpb24tei1kZXB0aC0xIGltZyB7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjI0KTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgY3ViaWMtYmV6aWVyKDAuMjUsIDAuOCwgMC4yNSwgMSk7XG59XG5cbi56LWRlcHRoLTIsIC5jYXB0aW9uLXotZGVwdGgtMiBpbWcge1xuICBib3gtc2hhZG93OiAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjE2KSwgMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yMyk7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGN1YmljLWJlemllcigwLjI1LCAwLjgsIDAuMjUsIDEpO1xufVxuXG4uei1kZXB0aC0zLCAuY2FwdGlvbi16LWRlcHRoLTMgaW1nIHtcbiAgYm94LXNoYWRvdzogMCAxMHB4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjE5KSwgMCA2cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yMyk7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGN1YmljLWJlemllcigwLjI1LCAwLjgsIDAuMjUsIDEpO1xufVxuXG4uei1kZXB0aC00LCAuY2FwdGlvbi16LWRlcHRoLTQgaW1nIHtcbiAgYm94LXNoYWRvdzogMCAxNHB4IDI4cHggcmdiYSgwLCAwLCAwLCAwLjI1KSwgMCAxMHB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjIyKTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgY3ViaWMtYmV6aWVyKDAuMjUsIDAuOCwgMC4yNSwgMSk7XG59XG5cbi56LWRlcHRoLTUsIC5jYXB0aW9uLXotZGVwdGgtNSBpbWcge1xuICBib3gtc2hhZG93OiAwIDE5cHggMzhweCByZ2JhKDAsIDAsIDAsIDAuMyksIDAgMTVweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4yMik7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGN1YmljLWJlemllcigwLjI1LCAwLjgsIDAuMjUsIDEpO1xufVxuXG4uY2FwdGlvbi11ay1ib3gtc2hhZG93LXNtYWxsIGltZyB7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMDgpO1xufVxuXG4uY2FwdGlvbi11ay1ib3gtc2hhZG93LW1lZGl1bSBpbWcge1xuICBib3gtc2hhZG93OiAwIDVweCAxNXB4IHJnYmEoMCwgMCwgMCwgMC4wOCk7XG59XG5cbi5jYXB0aW9uLXVrLWJveC1zaGFkb3ctbGFyZ2UgaW1nIHtcbiAgYm94LXNoYWRvdzogMCAxNHB4IDI1cHggcmdiYSgwLCAwLCAwLCAwLjE2KTtcbn1cblxuLmNhcHRpb24tdWstYm94LXNoYWRvdy14bGFyZ2UgaW1nIHtcbiAgYm94LXNoYWRvdzogMCAyOHB4IDUwcHggcmdiYSgwLCAwLCAwLCAwLjE2KTtcbn1cblxuLndlcC1ib3gtc2hhZG93LWJvdHRvbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi53ZXAtYm94LXNoYWRvdy1ib3R0b206YmVmb3JlIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAzMHB4O1xuICBsZWZ0OiAxMHB4O1xuICByaWdodDogMTBweDtcbiAgaGVpZ2h0OiAzMHB4O1xuICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICBiYWNrZ3JvdW5kOiAjOTk5O1xuICBmaWx0ZXI6IGJsdXIoNnB4KTtcbn1cblxuLnRydW5jYXRlIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuLm5hdmJhciB7XG4gIGJhY2tncm91bmQ6ICMwMDc2RDY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLm5hdmJhci1uYXYge1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbn1cblxuLm5hdmJhci1uYXYgbGk6YmVmb3JlLFxuLm5hdmJhci1uYXYgbGk6YWZ0ZXIge1xuICBjb250ZW50OiBub25lO1xufVxuXG4ubmF2YmFyLW5hdiA+IGxpIHtcbiAgcGFkZGluZzogMDtcbn1cblxuLm5hdmJhci1uYXYgPiBsaTpudGgtY2hpbGQobisyKSxcbi5uYXZiYXItbmF2ID4gbGkgPiB1bCB7XG4gIG1hcmdpbjogMDtcbn1cblxuLm5hdmJhci1sZWZ0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gIC5uYXZiYXItbGVmdCB7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxufVxuXG4ubmF2YmFyLXJpZ2h0IHtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbn1cblxuLm5hdmJhciBhLmF1dGhvciB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA3NXB4O1xufVxuXG4ubmF2YmFyIGEge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBjb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogZmxleDtcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgUm9ib3RvLCAnSGVsdmV0aWNhIE5ldWUnLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAwLjcyNXJlbTtcbiAgaGVpZ2h0OiA0NHB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgb3BhY2l0eTogMC42NzU7XG4gIHBhZGRpbmc6IDAgMTVweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ubmF2YmFyIGE6aG92ZXIsIC5uYXZiYXIgYTpmb2N1cyB7XG4gIGNvbG9yOiAjZmZmO1xuICBvcGFjaXR5OiAxO1xufVxuXG4ucHJvamVjdCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdHJhbnNpdGlvbjogMjAwbXMgZWFzZS1pbi1vdXQ7XG59XG5cbi5wcm9qZWN0ID4gYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucHJvamVjdC1jbGllbnQge1xuICB3aWR0aDogMTAwJTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBsaW5lLWhlaWdodDogMS4yNTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbn1cblxuLnByb2plY3QtY2xpZW50LWF2YXRhciB7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzBweDtcbiAgZmxleDogMCAwIGF1dG87XG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xufVxuXG4ucHJvamVjdC1jbGllbnQtaW5mbyB7XG4gIGxldHRlci1zcGFjaW5nOiAwLjI1cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLnByb2plY3QtY2xpZW50LWluZm8tdG9wIHtcbiAgY29sb3I6ICM1OTU5NTk7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4ucHJvamVjdC1jbGllbnQtaW5mby1ib3R0b20ge1xuICBjb2xvcjogIzIyMjtcbiAgZm9udC1mYW1pbHk6ICdWZXJkYW5hJywgc2Fucy1zZXJpZjtcbn1cblxuLnByb2plY3QtaW1hZ2UtY29udGFpbmVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogYWxsIDc1MG1zIGN1YmljLWJlemllcigwLjg2LCAwLCAwLjA3LCAxKTtcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjg2LCAwLCAwLjA3LCAxKTtcbiAgaGVpZ2h0OiAxNTBweDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQxMnB4KSB7XG4gIC5wcm9qZWN0LWltYWdlLWNvbnRhaW5lciB7XG4gICAgaGVpZ2h0OiAyMDBweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgLnByb2plY3QtaW1hZ2UtY29udGFpbmVyLmxhcmdlIHtcbiAgICBoZWlnaHQ6IDM1MHB4O1xuICB9XG59XG5cbi5wcm9qZWN0LWltYWdlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNDUpO1xuICB0cmFuc2l0aW9uOiBhbGwgNjAwbXMgY3ViaWMtYmV6aWVyKDAuODYsIDAsIDAuMDcsIDEpO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuODYsIDAsIDAuMDcsIDEpO1xufVxuXG4ucHJvamVjdC1pbWFnZS1mdWxsd2lkdGgge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3gtc2hhZG93OiBub25lO1xuICB0cmFuc2l0aW9uOiBpbml0aWFsO1xufVxuXG4ucHJvamVjdC1oZWFkZXIge1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG59XG5cbi5wcm9qZWN0LWNhdGVnb3J5IHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwIDAgNnB4O1xuICBjb2xvcjogIzMzMztcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM1NTU7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEwcHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cblxuLnByb2plY3QtdGl0bGUge1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDE4cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjI1O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDAgMCA4cHg7XG59XG5cbi5wcm9qZWN0LXRpdGxlIGEsXG4ucHJvamVjdC10aXRsZSBhOmxpbmssXG4ucHJvamVjdC10aXRsZSBhOnZpc2l0ZWQge1xuICBjb2xvcjogIzMzMztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiAzMDBtcyBlYXNlO1xufVxuXG4ucHJvamVjdC10aXRsZSBhOmJlZm9yZSwgLnByb2plY3QtdGl0bGUgYTphZnRlcixcbi5wcm9qZWN0LXRpdGxlIGE6bGluazpiZWZvcmUsXG4ucHJvamVjdC10aXRsZSBhOmxpbms6YWZ0ZXIsXG4ucHJvamVjdC10aXRsZSBhOnZpc2l0ZWQ6YmVmb3JlLFxuLnByb2plY3QtdGl0bGUgYTp2aXNpdGVkOmFmdGVyIHtcbiAgY29udGVudDogbm9uZTtcbn1cblxuLnByb2plY3QtdGl0bGUgYTpob3ZlciwgLnByb2plY3QtdGl0bGUgYTpmb2N1cyxcbi5wcm9qZWN0LXRpdGxlIGE6bGluazpob3Zlcixcbi5wcm9qZWN0LXRpdGxlIGE6bGluazpmb2N1cyxcbi5wcm9qZWN0LXRpdGxlIGE6dmlzaXRlZDpob3Zlcixcbi5wcm9qZWN0LXRpdGxlIGE6dmlzaXRlZDpmb2N1cyB7XG4gIGNvbG9yOiBjb2xvcihhY2NlbnQsIGJhc2UpO1xufVxuXG4ucHJvamVjdC1uYW1lIHtcbiAgZm9udDogbm9ybWFsIDE1cHgvMS40IHNhbnMtc2VyaWY7XG4gIG1hcmdpbjogMDtcbn1cblxuLnByb2plY3QtYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4ucHJvamVjdC1ib2R5IGE6YmVmb3JlLFxuLnByb2plY3QtYm9keSBhOmxpbms6YmVmb3JlLFxuLnByb2plY3QtYm9keSBhOnZpc2l0ZWQ6YmVmb3JlIHtcbiAgcmlnaHQ6IDhweDtcbn1cblxuLnByb2plY3QtYm9keSBhOmhvdmVyOmFmdGVyLCAucHJvamVjdC1ib2R5IGE6Zm9jdXM6YWZ0ZXIsXG4ucHJvamVjdC1ib2R5IGE6bGluazpob3ZlcjphZnRlcixcbi5wcm9qZWN0LWJvZHkgYTpsaW5rOmZvY3VzOmFmdGVyLFxuLnByb2plY3QtYm9keSBhOnZpc2l0ZWQ6aG92ZXI6YWZ0ZXIsXG4ucHJvamVjdC1ib2R5IGE6dmlzaXRlZDpmb2N1czphZnRlciB7XG4gIHJpZ2h0OiA4cHg7XG59XG5cbi5wcm9qZWN0LWRldGFpbHMge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4ucHJvamVjdC1idXR0b24ge1xuICBwYWRkaW5nOiAwIDIwcHggMCAyNHB4O1xufVxuXG4ucHJvamVjdCAucHJvamVjdC1pbWFnZS1mdWxsd2lkdGgge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5wcm9qZWN0IC5wcm9qZWN0LWltYWdlLWZ1bGx3aWR0aDphZnRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43NjUpO1xuICB3aWR0aDogMTAwJTtcbiAgbWluLXdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgbWF4LWhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2NDBweCkge1xuICAucHJvamVjdCAucHJvamVjdC1pbWFnZS1mdWxsd2lkdGg6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IG5vbmU7XG4gIH1cbn1cblxuLnByb2plY3QgLnByb2plY3QtZnVsbHdpZHRoLWluZm8tbGlnaHQtYmcge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOTI1KTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkxNSk7XG59XG5cbi5wcm9qZWN0OmhvdmVyIC5wcm9qZWN0LWltYWdlLWZ1bGx3aWR0aCwgLnByb2plY3Q6Zm9jdXMgLnByb2plY3QtaW1hZ2UtZnVsbHdpZHRoIHtcbiAgYm94LXNoYWRvdzogbm9uZTtcbn1cblxudGFibGU6bm90KC5qcy1maWxlLWxpbmUtY29udGFpbmVyKSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgZm9udC1zaXplOiAwLjg3NWVtO1xuICBsaW5lLWhlaWdodDogMS4wNDtcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgUm9ib3RvLCAnSGVsdmV0aWNhIE5ldWUnLCBBcmlhbCwgc2Fucy1zZXJpZjtcbn1cblxudGFibGU6bm90KC5qcy1maWxlLWxpbmUtY29udGFpbmVyKSArIHRhYmxlIHtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cblxudGFibGU6bm90KC5qcy1maWxlLWxpbmUtY29udGFpbmVyKSB0aCB7XG4gIHBhZGRpbmc6IDE2cHggMTJweDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBjb2xvcjogIzk5OTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxudGFibGU6bm90KC5qcy1maWxlLWxpbmUtY29udGFpbmVyKSB0ZCB7XG4gIHBhZGRpbmc6IDE2cHggMTJweDtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxudGFibGU6bm90KC5qcy1maWxlLWxpbmUtY29udGFpbmVyKSB0ZCA+IDpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxudGFibGU6bm90KC5qcy1maWxlLWxpbmUtY29udGFpbmVyKSB0Zm9vdCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxudGFibGU6bm90KC5qcy1maWxlLWxpbmUtY29udGFpbmVyKSA+IHRyOm5vdCg6Zmlyc3QtY2hpbGQpLFxudGFibGU6bm90KC5qcy1maWxlLWxpbmUtY29udGFpbmVyKSA+IDpub3QoOmZpcnN0LWNoaWxkKSA+IHRyLFxudGFibGU6bm90KC5qcy1maWxlLWxpbmUtY29udGFpbmVyKSA+IDpmaXJzdC1jaGlsZCA+IHRyOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNWU1ZTU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5NTlweCkge1xuICB0YWJsZTpub3QoLmpzLWZpbGUtbGluZS1jb250YWluZXIpIHRib2R5LFxuICB0YWJsZTpub3QoLmpzLWZpbGUtbGluZS1jb250YWluZXIpIHRoLFxuICB0YWJsZTpub3QoLmpzLWZpbGUtbGluZS1jb250YWluZXIpIHRkLFxuICB0YWJsZTpub3QoLmpzLWZpbGUtbGluZS1jb250YWluZXIpIHRyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuICB0YWJsZTpub3QoLmpzLWZpbGUtbGluZS1jb250YWluZXIpIHRoZWFkIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIHRhYmxlOm5vdCguanMtZmlsZS1saW5lLWNvbnRhaW5lcikgdGgsXG4gIHRhYmxlOm5vdCguanMtZmlsZS1saW5lLWNvbnRhaW5lcikgdGQge1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIG1heC13aWR0aDogbm9uZTtcbiAgICBtaW4td2lkdGg6IDA7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgfVxuICB0YWJsZTpub3QoLmpzLWZpbGUtbGluZS1jb250YWluZXIpIHRkOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xuICB9XG4gIHRhYmxlOm5vdCguanMtZmlsZS1saW5lLWNvbnRhaW5lcikgdGQ6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgcGFkZGluZy1ib3R0b206IDVweDtcbiAgfVxuICB0YWJsZTpub3QoLmpzLWZpbGUtbGluZS1jb250YWluZXIpIHRoLFxuICB0YWJsZTpub3QoLmpzLWZpbGUtbGluZS1jb250YWluZXIpIHRkIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgcGFkZGluZy1yaWdodDogMDtcbiAgfVxufVxuXG4vKipcbiAqIEBuYW1lIF9saXN0XG4gKiBAc2VlIFtVSWtpdF17QGxpbmsgaHR0cHM6Ly9nZXR1aWtpdC5jb20vZG9jcy9saXN0fVxuICovXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbnVsID4gbGkge1xuICBwYWRkaW5nLWxlZnQ6IGNhbGMoMS41ZW0gKyAxMHB4KTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG51bCA+IGxpOmJlZm9yZSxcbnVsID4gbGk6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgZGlzcGxheTogdGFibGU7XG59XG5cbnVsID4gbGk6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sO2NoYXJzZXQ9VVRGLTgsJTNDc3ZnJTIwd2lkdGglM0QlMjI2JTIyJTIwaGVpZ2h0JTNEJTIyNiUyMiUyMHZpZXdCb3glM0QlMjIwJTIwMCUyMDYlMjA2JTIyJTIweG1sbnMlM0QlMjJodHRwJTNBJTJGJTJGd3d3LnczLm9yZyUyRjIwMDAlMkZzdmclMjIlM0UlMEElMjAlMjAlMjAlMjAlM0NjaXJjbGUlMjBmaWxsJTNEJTIyJTIzNjY2JTIyJTIwY3glM0QlMjIzJTIyJTIwY3klM0QlMjIzJTIyJTIwciUzRCUyMjMlMjIlMjAlMkYlM0UlMEElM0MlMkZzdmclM0VcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxLjVlbTtcbiAgbGVmdDogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxLjVlbTtcbn1cblxudWwgPiBsaTphZnRlciB7XG4gIGNsZWFyOiBib3RoO1xufVxuXG51bCA+IGxpID4gOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG51bCB1bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xufVxuXG51bCA+IGxpOm50aC1jaGlsZChuICsgMiksXG51bCA+IGxpID4gdWwge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4udG9jIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgZm9udC1mYW1pbHk6ICdMYXRvJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGxlZnQ6IGF1dG87XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbWFyZ2luOiA4NHB4IDA7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIHRyYW5zaXRpb246IG1hcmdpbiA5MDBtcyBjdWJpYy1iZXppZXIoMC4yNSwgMC44LCAwLjI1LCAxKTtcbn1cblxuLnRvYy5zY3JvbGxlZCB7XG4gIG1hcmdpbjogMjRweCAwO1xufVxuXG4udG9jIHVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLnRvYyB1bCB1bCB7XG4gIHBhZGRpbmctbGVmdDogMDtcbn1cblxuLnRvYyB1bCB1bCB1bCB7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbn1cblxuLnRvYyB1bCA+IGxpIHtcbiAgcGFkZGluZy1sZWZ0OiAwO1xufVxuXG4udG9jIHVsID4gbGk6bnRoLWNoaWxkKG4rMiksXG4udG9jIHVsID4gbGkgPiB1bCB7XG4gIG1hcmdpbi10b3A6IDRweDtcbn1cblxuLnRvYyBsaSB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cbi50b2MgbGk6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cblxuLnRvYyBhIHtcbiAgY29sb3I6IGluaXRpYWw7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi50b2MgYTpob3ZlciwgLnRvYyBhOmZvY3VzIHtcbiAgb3BhY2l0eTogMC42NTtcbn1cblxuLnRvYyAudWstYWN0aXZlID4gYSB7XG4gIGJvcmRlci1sZWZ0OiAycHggc29saWQgIzAwNzZENjtcbiAgY29sb3I6ICMwMDc2RDY7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50b2Mge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxOHZ3O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5NjBweCkge1xuICAudG9jIHtcbiAgICB3aWR0aDogMjQuNzI1dnc7XG4gIH1cbn1cblxuLmNvbnRhaW5lciB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBtYXgtd2lkdGg6IDEzODBweDtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDMwcHg7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk2MHB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIHBhZGRpbmctbGVmdDogNDBweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xuICB9XG59XG5cbi5jb250YWluZXI6YmVmb3JlLCAuY29udGFpbmVyOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogdGFibGU7XG59XG5cbi5jb250YWluZXI6YWZ0ZXIge1xuICBjbGVhcjogYm90aDtcbn1cblxuLmNvbnRhaW5lciA+IDpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmNvbnRhaW5lciAudWstY29udGFpbmVyIHtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xufVxuXG4ucHVzaC1sZWZ0IHtcbiAgbWF4LXdpZHRoOiAxMDB2dztcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAucHVzaC1sZWZ0IHtcbiAgICBtYXJnaW46IDAgYXV0byAwIDA7XG4gICAgbWF4LXdpZHRoOiA3MHZ3O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5NjBweCkge1xuICAucHVzaC1sZWZ0IHtcbiAgICBtYXJnaW46IDAgYXV0byAwIDA7XG4gICAgbWF4LXdpZHRoOiA2NXZ3O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnB1c2gtbGVmdCB7XG4gICAgbWFyZ2luOiAwIGNhbGMoNTB2dyAtIDIwdncpIDAgYXV0bztcbiAgICBtYXgtd2lkdGg6IDQ1dnc7XG4gIH1cbn1cblxuLmFydGljbGUge1xuICBtYXJnaW46IDQwcHggMDtcbn1cblxuLmFydGljbGUgaDEsIC5hcnRpY2xlIGgyLCAuYXJ0aWNsZSBoMywgLmFydGljbGUgaDQsIC5hcnRpY2xlIGg1LCAuYXJ0aWNsZSBoNiB7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xufVxuXG4uYXJ0aWNsZSBpbWcge1xuICBib3gtc2hhZG93OiAwIDE0cHggMjVweCByZ2JhKDAsIDAsIDAsIDAuMTYpO1xufVxuXG4uYXJ0aWNsZSBsaSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbi5hcnRpY2xlIGxpID4gc3Ryb25nIHtcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ0xhdG8nLCAnU2Vnb2UgVUknLCBSb2JvdG8sICdIZWx2ZXRpY2EgTmV1ZScsIEFyaWFsLCBzYW5zLXNlcmlmO1xufVxuXG4uYXJ0aWNsZSAuY2xpZW50LWJsb2NrIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG59XG5cbi5hcnRpY2xlIC5jbGllbnQtYmxvY2sgLmF2YXRhciB7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDYwcHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHdpZHRoOiA2MHB4O1xufVxuXG4uYXJ0aWNsZSAuY2xpZW50LWJsb2NrIC5tZXRhIHtcbiAgZm9udDogbm9ybWFsIDEzcHgvMS40IHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA2NXB4O1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG59XG5cbi5hcnRpY2xlIC5jbGllbnQtYmxvY2sgLmNsaWVudCxcbi5hcnRpY2xlIC5jbGllbnQtYmxvY2sgLmRlc2NyaXB0aW9uIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uYXJ0aWNsZSAuY2xpZW50LWJsb2NrIC5jbGllbnQge1xuICBjb2xvcjogIzExMTtcbn1cblxuLmFydGljbGUgLmNsaWVudC1ibG9jayAuZGVzY3JpcHRpb24ge1xuICBjb2xvcjogIzU5NTk1OTtcbn1cblxuLmFydGljbGUgLmxlYWQge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgY29sb3I6ICMzMzM7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBmb250LXdlaWdodDogMzAwO1xuICBsZXR0ZXItc3BhY2luZzogLTAuODY1cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjM0NTQ7XG4gIG1hcmdpbjogMCAwIDIwcHg7XG59XG5cbi5hcnRpY2xlIC5kYXRlLFxuLmFydGljbGUgLmluZm8ge1xuICBjb2xvcjogIzc1NzU3NTtcbiAgZm9udDogbm9ybWFsIDAuNzVyZW0vMS40IHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA2NXB4O1xuICBtYXJnaW46IDAgMCAxMHB4O1xufVxuXG4uYXJ0aWNsZSAuaGVybyB7XG4gIGNvbG9yOiAjNTk1OTU5O1xuICBmb250OiBub3JtYWwgMTRweC8xLjI1IHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjI2NXB4O1xuICBtYXJnaW46IDQwcHggYXV0bztcbiAgcGFkZGluZzogMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmFydGljbGUgLmhlcm8gLmZpZ3VyZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDA7XG59XG5cbi5hcnRpY2xlIC5oZXJvIC5pbWFnZSB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgYm94LXNoYWRvdzogMCA1cHggMTVweCByZ2JhKDAsIDAsIDAsIDAuMDgpO1xuICBtYXJnaW46IGF1dG87XG4gIG1heC13aWR0aDogOTB2dztcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICB0cmFuc2l0aW9uOiAwLjFzIGVhc2UtaW4tb3V0O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmFydGljbGUgLmhlcm8gLmNhcHRpb24ge1xuICBtYXJnaW4tdG9wOiA4cHg7XG59XG5cbi5hcnRpY2xlIC5jb250ZW50LFxuLmFydGljbGUgLmZvb3RlciB7XG4gIG1hcmdpbjogNDBweCBhdXRvO1xufVxuXG4uYXJ0aWNsZSAuc291cmNlcyBoMiB7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG59XG5cbi5hcnRpY2xlIC5zb3VyY2VzIGxpIHtcbiAgZm9udC1zaXplOiAwLjg3NWVtO1xuICBsaW5lLWhlaWdodDogMS4yNTtcbn1cblxuLmFydGljbGUgLnNvdXJjZXMgdWwgPiBsaTpudGgtY2hpbGQobisyKSB7XG4gIG1hcmdpbi10b3A6IDZweDtcbn1cbiIsIi8qIFByaXNtSlMgMS4xNi4wXG5odHRwczovL3ByaXNtanMuY29tL2Rvd25sb2FkLmh0bWwjdGhlbWVzPXByaXNtJmxhbmd1YWdlcz1tYXJrdXArY3NzK2NsaWtlK2phdmFzY3JpcHQrYXBhY2hlY29uZitiYXNoK2RpZmYrZ2l0K2dvK2phdmFkb2NsaWtlK2pzb24rbWFya2Rvd24rdHlwZXNjcmlwdCtqc2RvYytzY3NzK2pzeCt0c3grcmVnZXgmcGx1Z2lucz1saW5lLWhpZ2hsaWdodCtsaW5lLW51bWJlcnMrYXV0b2xpbmtlcit0b29sYmFyK2hpZ2hsaWdodC1rZXl3b3Jkcytjb21tYW5kLWxpbmUrc2hvdy1sYW5ndWFnZSAqL1xuLyoqXG4gKiBwcmlzbS5qcyBkZWZhdWx0IHRoZW1lIGZvciBKYXZhU2NyaXB0LCBDU1MgYW5kIEhUTUxcbiAqIEJhc2VkIG9uIGRhYmJsZXQgKGh0dHA6Ly9kYWJibGV0LmNvbSlcbiAqIEBhdXRob3IgTGVhIFZlcm91XG4gKi9cblxuY29kZVtjbGFzcyo9J2xhbmd1YWdlLSddLFxucHJlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10ge1xuICAgIGNvbG9yOiBibGFjaztcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIGJveC1zaGFkb3c6IDAgMTRweCAyNXB4IHJnYmEoMCwgMCwgMCwgMC4xNik7XG4gICAgZm9udC1mYW1pbHk6IENvbnNvbGFzLCBNb25hY28sICdBbmRhbGUgTW9ubycsICdVYnVudHUgTW9ubycsIG1vbm9zcGFjZTtcbiAgICBmb250LXNpemU6IDAuODc1ZW07XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICB3aGl0ZS1zcGFjZTogcHJlO1xuICAgIHdvcmQtc3BhY2luZzogbm9ybWFsO1xuICAgIHdvcmQtYnJlYWs6IG5vcm1hbDtcbiAgICB3b3JkLXdyYXA6IG5vcm1hbDtcbiAgICBsaW5lLWhlaWdodDogMS4zNTtcblxuICAgIC1tb3otdGFiLXNpemU6IDQ7XG4gICAgLW8tdGFiLXNpemU6IDQ7XG4gICAgdGFiLXNpemU6IDQ7XG5cbiAgICAtd2Via2l0LWh5cGhlbnM6IG5vbmU7XG4gICAgLW1vei1oeXBoZW5zOiBub25lO1xuICAgIC1tcy1oeXBoZW5zOiBub25lO1xuICAgIGh5cGhlbnM6IG5vbmU7XG59XG5cbnByZVtjbGFzcyo9J2xhbmd1YWdlLSddOjotbW96LXNlbGVjdGlvbixcbnByZVtjbGFzcyo9J2xhbmd1YWdlLSddIDo6LW1vei1zZWxlY3Rpb24sXG5jb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ106Oi1tb3otc2VsZWN0aW9uLFxuY29kZVtjbGFzcyo9J2xhbmd1YWdlLSddIDo6LW1vei1zZWxlY3Rpb24ge1xuICAgIHRleHQtc2hhZG93OiBub25lO1xuICAgIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XG59XG5cbnByZVtjbGFzcyo9J2xhbmd1YWdlLSddOjpzZWxlY3Rpb24sXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSA6OnNlbGVjdGlvbixcbmNvZGVbY2xhc3MqPSdsYW5ndWFnZS0nXTo6c2VsZWN0aW9uLFxuY29kZVtjbGFzcyo9J2xhbmd1YWdlLSddIDo6c2VsZWN0aW9uIHtcbiAgICB0ZXh0LXNoYWRvdzogbm9uZTtcbiAgICBiYWNrZ3JvdW5kOiAjYjNkNGZjO1xufVxuXG5AbWVkaWEgcHJpbnQge1xuICAgIGNvZGVbY2xhc3MqPSdsYW5ndWFnZS0nXSxcbiAgICBwcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSB7XG4gICAgICAgIHRleHQtc2hhZG93OiBub25lO1xuICAgIH1cbn1cblxuLyogQ29kZSBibG9ja3MgKi9cbnByZVtjbGFzcyo9J2xhbmd1YWdlLSddIHtcbiAgICBwYWRkaW5nOiAzZW0gMi41ZW0gMmVtIDIuNWVtO1xuICAgIC8vIG1hcmdpbjogMC41ZW0gMDtcbiAgICBvdmVyZmxvdzogYXV0bztcbn1cblxuOm5vdChwcmUpID4gY29kZVtjbGFzcyo9J2xhbmd1YWdlLSddLFxucHJlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10ge1xuICAgIGJhY2tncm91bmQ6ICNmNWYyZjA7XG59XG5cbi8qIElubGluZSBjb2RlICovXG46bm90KHByZSkgPiBjb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10ge1xuICAgIHBhZGRpbmc6IDAuMWVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuM2VtO1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG59XG5cbi50b2tlbi5jb21tZW50LFxuLnRva2VuLnByb2xvZyxcbi50b2tlbi5kb2N0eXBlLFxuLnRva2VuLmNkYXRhIHtcbiAgICBjb2xvcjogc2xhdGVncmF5O1xufVxuXG4udG9rZW4ucHVuY3R1YXRpb24ge1xuICAgIGNvbG9yOiAjOTk5O1xufVxuXG4ubmFtZXNwYWNlIHtcbiAgICBvcGFjaXR5OiAwLjc7XG59XG5cbi50b2tlbi5wcm9wZXJ0eSxcbi50b2tlbi50YWcsXG4udG9rZW4uYm9vbGVhbixcbi50b2tlbi5udW1iZXIsXG4udG9rZW4uY29uc3RhbnQsXG4udG9rZW4uc3ltYm9sLFxuLnRva2VuLmRlbGV0ZWQge1xuICAgIGNvbG9yOiAjOTA1O1xufVxuXG4udG9rZW4uc2VsZWN0b3IsXG4udG9rZW4uYXR0ci1uYW1lLFxuLnRva2VuLnN0cmluZyxcbi50b2tlbi5jaGFyLFxuLnRva2VuLmJ1aWx0aW4sXG4udG9rZW4uaW5zZXJ0ZWQge1xuICAgIGNvbG9yOiAjNjkwO1xufVxuXG4udG9rZW4ub3BlcmF0b3IsXG4udG9rZW4uZW50aXR5LFxuLnRva2VuLnVybCxcbi5sYW5ndWFnZS1jc3MgLnRva2VuLnN0cmluZyxcbi5zdHlsZSAudG9rZW4uc3RyaW5nIHtcbiAgICBjb2xvcjogIzlhNmUzYTtcbiAgICAvLyBiYWNrZ3JvdW5kOiBoc2xhKDAsIDAlLCAxMDAlLCAuNSk7XG59XG5cbi50b2tlbi5hdHJ1bGUsXG4udG9rZW4uYXR0ci12YWx1ZSxcbi50b2tlbi5rZXl3b3JkIHtcbiAgICBjb2xvcjogIzA3YTtcbn1cblxuLnRva2VuLmZ1bmN0aW9uLFxuLnRva2VuLmNsYXNzLW5hbWUge1xuICAgIGNvbG9yOiAjZGQ0YTY4O1xufVxuXG4udG9rZW4ucmVnZXgsXG4udG9rZW4uaW1wb3J0YW50LFxuLnRva2VuLnZhcmlhYmxlIHtcbiAgICBjb2xvcjogI2U5MDtcbn1cblxuLnRva2VuLmltcG9ydGFudCxcbi50b2tlbi5ib2xkIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cbi50b2tlbi5pdGFsaWMge1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLnRva2VuLmVudGl0eSB7XG4gICAgY3Vyc29yOiBoZWxwO1xufVxuXG5wcmVbZGF0YS1saW5lXSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IDFlbSAwIDFlbSAzZW07XG59XG5cbi5saW5lLWhpZ2hsaWdodCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgcGFkZGluZzogaW5oZXJpdCAwO1xuICAgIG1hcmdpbi10b3A6IDFlbTsgLyogU2FtZSBhcyAucHJpc23igJlzIHBhZGRpbmctdG9wICovXG5cbiAgICBiYWNrZ3JvdW5kOiBoc2xhKDI0LCAyMCUsIDUwJSwgMC4wOCk7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxuICAgICAgICB0byByaWdodCxcbiAgICAgICAgaHNsYSgyNCwgMjAlLCA1MCUsIDAuMSkgNzAlLFxuICAgICAgICBoc2xhKDI0LCAyMCUsIDUwJSwgMClcbiAgICApO1xuXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG5cbiAgICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbiAgICB3aGl0ZS1zcGFjZTogcHJlO1xufVxuXG4ubGluZS1oaWdobGlnaHQ6YmVmb3JlLFxuLmxpbmUtaGlnaGxpZ2h0W2RhdGEtZW5kXTphZnRlciB7XG4gICAgY29udGVudDogYXR0cihkYXRhLXN0YXJ0KTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwLjRlbTtcbiAgICBsZWZ0OiAwLjZlbTtcbiAgICBtaW4td2lkdGg6IDFlbTtcbiAgICBwYWRkaW5nOiAwIDAuNWVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhzbGEoMjQsIDIwJSwgNTAlLCAwLjQpO1xuICAgIGNvbG9yOiBoc2woMjQsIDIwJSwgOTUlKTtcbiAgICBmb250OiBib2xkIDY1JS8xLjUgc2Fucy1zZXJpZjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdmVydGljYWwtYWxpZ246IDAuM2VtO1xuICAgIGJvcmRlci1yYWRpdXM6IDk5OXB4O1xuICAgIHRleHQtc2hhZG93OiBub25lO1xuICAgIGJveC1zaGFkb3c6IDAgMXB4IHdoaXRlO1xufVxuXG4ubGluZS1oaWdobGlnaHRbZGF0YS1lbmRdOmFmdGVyIHtcbiAgICBjb250ZW50OiBhdHRyKGRhdGEtZW5kKTtcbiAgICB0b3A6IGF1dG87XG4gICAgYm90dG9tOiAwLjRlbTtcbn1cblxuLmxpbmUtbnVtYmVycyAubGluZS1oaWdobGlnaHQ6YmVmb3JlLFxuLmxpbmUtbnVtYmVycyAubGluZS1oaWdobGlnaHQ6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IG5vbmU7XG59XG5cbnByZVtjbGFzcyo9J2xhbmd1YWdlLSddLmxpbmUtbnVtYmVycyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmctbGVmdDogMy44ZW07XG4gICAgY291bnRlci1yZXNldDogbGluZW51bWJlcjtcbn1cblxucHJlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10ubGluZS1udW1iZXJzID4gY29kZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdoaXRlLXNwYWNlOiBpbmhlcml0O1xufVxuXG4ubGluZS1udW1iZXJzIC5saW5lLW51bWJlcnMtcm93cyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIHRvcDogMDtcbiAgICBmb250LXNpemU6IDEwMCU7XG4gICAgbGVmdDogLTMuOGVtO1xuICAgIHdpZHRoOiAzZW07IC8qIHdvcmtzIGZvciBsaW5lLW51bWJlcnMgYmVsb3cgMTAwMCBsaW5lcyAqL1xuICAgIGxldHRlci1zcGFjaW5nOiAtMXB4O1xuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICM5OTk7XG5cbiAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG4ubGluZS1udW1iZXJzLXJvd3MgPiBzcGFuIHtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb3VudGVyLWluY3JlbWVudDogbGluZW51bWJlcjtcbn1cblxuLmxpbmUtbnVtYmVycy1yb3dzID4gc3BhbjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IGNvdW50ZXIobGluZW51bWJlcik7XG4gICAgY29sb3I6ICM5OTk7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZy1yaWdodDogMC44ZW07XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi50b2tlbiBhIHtcbiAgICBjb2xvcjogaW5oZXJpdDtcbn1cblxuZGl2LmNvZGUtdG9vbGJhciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5kaXYuY29kZS10b29sYmFyID4gLnRvb2xiYXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogMDtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZS1pbi1vdXQ7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDAuNjc1ZW07XG4gICAgbGluZS1oZWlnaHQ6IDE7XG59XG5cbmRpdi5jb2RlLXRvb2xiYXIgPiAudG9vbGJhciAudG9vbGJhci1pdGVtIHtcbiAgICBwYWRkaW5nOiAwLjVlbSAxZW07XG59XG5cbi5sYW5ndWFnZS1qcyB+IC50b29sYmFyIHtcbiAgICBiYWNrZ3JvdW5kOiAjZWVkODE3O1xuICAgIGNvbG9yOiAjMTExO1xufVxuXG4ubGFuZ3VhZ2Utc2NzcyB+IC50b29sYmFyIHtcbiAgICBiYWNrZ3JvdW5kOiAjYzg2MTk1O1xuICAgIGNvbG9yOiAjZmZmO1xufVxuXG4ubGFuZ3VhZ2UtaHRtbCB+IC50b29sYmFyIHtcbiAgICBiYWNrZ3JvdW5kOiAjZWU2NTM0O1xuICAgIGNvbG9yOiAjZmZmO1xufVxuXG4ubGFuZ3VhZ2UtZ28gfiAudG9vbGJhciB7XG4gICAgYmFja2dyb3VuZDogIzQ1Njk5YjtcbiAgICBjb2xvcjogI2ZmZjtcbn1cblxuZGl2LmNvZGUtdG9vbGJhciA+IC50b29sYmFyIGEge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuZGl2LmNvZGUtdG9vbGJhciA+IC50b29sYmFyIGJ1dHRvbiB7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBib3JkZXI6IDA7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgZm9udDogaW5oZXJpdDtcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTsgLyogZm9yIGJ1dHRvbiAqL1xuICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xufVxuXG4uY29tbWFuZC1saW5lLXByb21wdCB7XG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgIzk5OTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmbG9hdDogbGVmdDtcbiAgICBmb250LXNpemU6IDEwMCU7XG4gICAgbGV0dGVyLXNwYWNpbmc6IC0xcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxZW07XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG5cbiAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG4uY29tbWFuZC1saW5lLXByb21wdCA+IHNwYW46YmVmb3JlIHtcbiAgICBjb2xvcjogIzk5OTtcbiAgICBjb250ZW50OiAnICc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZy1yaWdodDogMC44ZW07XG59XG5cbi5jb21tYW5kLWxpbmUtcHJvbXB0ID4gc3BhbltkYXRhLXVzZXJdOmJlZm9yZSB7XG4gICAgY29udGVudDogJ1snIGF0dHIoZGF0YS11c2VyKSAnQCcgYXR0cihkYXRhLWhvc3QpICddICQnO1xufVxuXG4uY29tbWFuZC1saW5lLXByb21wdCA+IHNwYW5bZGF0YS11c2VyPSdyb290J106YmVmb3JlIHtcbiAgICBjb250ZW50OiAnWycgYXR0cihkYXRhLXVzZXIpICdAJyBhdHRyKGRhdGEtaG9zdCkgJ10gIyc7XG59XG5cbi5jb21tYW5kLWxpbmUtcHJvbXB0ID4gc3BhbltkYXRhLXByb21wdF06YmVmb3JlIHtcbiAgICBjb250ZW50OiBhdHRyKGRhdGEtcHJvbXB0KTtcbn1cbiIsIi8qKlxuICogcHJpc20uanMgZGVmYXVsdCB0aGVtZSBmb3IgSmF2YVNjcmlwdCwgQ1NTIGFuZCBIVE1MXG4gKiBCYXNlZCBvbiBkYWJibGV0IChodHRwOi8vZGFiYmxldC5jb20pXG4gKiBAYXV0aG9yIExlYSBWZXJvdVxuICovXG5jb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10sXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSB7XG4gICAgY29sb3I6ICNhYmIyYmY7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBmb250LWZhbWlseTogQ29uc29sYXMsIE1vbmFjbywgJ0FuZGFsZSBNb25vJywgJ1VidW50dSBNb25vJywgbW9ub3NwYWNlO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgd2hpdGUtc3BhY2U6IHByZTtcbiAgICB3b3JkLXNwYWNpbmc6IG5vcm1hbDtcbiAgICB3b3JkLWJyZWFrOiBub3JtYWw7XG4gICAgd29yZC13cmFwOiBub3JtYWw7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICAtbW96LXRhYi1zaXplOiA0O1xuICAgIC1vLXRhYi1zaXplOiA0O1xuICAgIHRhYi1zaXplOiA0O1xuICAgIC13ZWJraXQtaHlwaGVuczogbm9uZTtcbiAgICAtbW96LWh5cGhlbnM6IG5vbmU7XG4gICAgLW1zLWh5cGhlbnM6IG5vbmU7XG4gICAgaHlwaGVuczogbm9uZTtcbn1cblxucHJlW2NsYXNzKj0nbGFuZ3VhZ2UtJ106Oi1tb3otc2VsZWN0aW9uLFxucHJlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10gOjotbW96LXNlbGVjdGlvbixcbmNvZGVbY2xhc3MqPSdsYW5ndWFnZS0nXTo6LW1vei1zZWxlY3Rpb24sXG5jb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10gOjotbW96LXNlbGVjdGlvbiB7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogIzM4M2U0OTtcbn1cblxucHJlW2NsYXNzKj0nbGFuZ3VhZ2UtJ106OnNlbGVjdGlvbixcbnByZVtjbGFzcyo9J2xhbmd1YWdlLSddIDo6c2VsZWN0aW9uLFxuY29kZVtjbGFzcyo9J2xhbmd1YWdlLSddOjpzZWxlY3Rpb24sXG5jb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10gOjpzZWxlY3Rpb24ge1xuICAgIHRleHQtc2hhZG93OiBub25lO1xuICAgIGJhY2tncm91bmQ6ICM5YWEyYjE7XG59XG5cbkBtZWRpYSBwcmludCB7XG4gICAgY29kZVtjbGFzcyo9J2xhbmd1YWdlLSddLFxuICAgIHByZVtjbGFzcyo9J2xhbmd1YWdlLSddIHtcbiAgICAgICAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gICAgfVxufVxuLyogQ29kZSBibG9ja3MgKi9cbnByZVtjbGFzcyo9J2xhbmd1YWdlLSddIHtcbiAgICAvLyAgIHBhZGRpbmc6IDFlbTtcbiAgICAvLyAgIG1hcmdpbjogLjVlbSAwO1xuICAgIG92ZXJmbG93OiBhdXRvO1xufVxuXG46bm90KHByZSkgPiBjb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10sXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSB7XG4gICAgYmFja2dyb3VuZDogIzI4MmMzNDtcbn1cblxuLyogSW5saW5lIGNvZGUgKi9cbjpub3QocHJlKSA+IGNvZGVbY2xhc3MqPSdsYW5ndWFnZS0nXSB7XG4gICAgcGFkZGluZzogMC4xZW07XG4gICAgYm9yZGVyLXJhZGl1czogMC4zZW07XG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbn1cblxuLnRva2VuLmNvbW1lbnQsXG4udG9rZW4ucHJvbG9nLFxuLnRva2VuLmRvY3R5cGUsXG4udG9rZW4uY2RhdGEge1xuICAgIGNvbG9yOiAjNWM2MzcwO1xufVxuXG4udG9rZW4ucHVuY3R1YXRpb24ge1xuICAgIGNvbG9yOiAjYWJiMmJmO1xufVxuXG4udG9rZW4uc2VsZWN0b3IsXG4udG9rZW4udGFnIHtcbiAgICBjb2xvcjogI2UwNmM3NTtcbn1cblxuLnRva2VuLnByb3BlcnR5LFxuLnRva2VuLmJvb2xlYW4sXG4udG9rZW4ubnVtYmVyLFxuLnRva2VuLmNvbnN0YW50LFxuLnRva2VuLnN5bWJvbCxcbi50b2tlbi5hdHRyLW5hbWUsXG4udG9rZW4uZGVsZXRlZCB7XG4gICAgY29sb3I6ICNkMTlhNjY7XG59XG5cbi50b2tlbi5zdHJpbmcsXG4udG9rZW4uY2hhcixcbi50b2tlbi5hdHRyLXZhbHVlLFxuLnRva2VuLmJ1aWx0aW4sXG4udG9rZW4uaW5zZXJ0ZWQge1xuICAgIGNvbG9yOiAjOThjMzc5O1xufVxuXG4udG9rZW4ub3BlcmF0b3IsXG4udG9rZW4uZW50aXR5LFxuLnRva2VuLnVybCxcbi5sYW5ndWFnZS1jc3MgLnRva2VuLnN0cmluZyxcbi5zdHlsZSAudG9rZW4uc3RyaW5nIHtcbiAgICBjb2xvcjogIzU2YjZjMjtcbn1cblxuLnRva2VuLmF0cnVsZSxcbi50b2tlbi5rZXl3b3JkIHtcbiAgICBjb2xvcjogI2M2NzhkZDtcbn1cblxuLnRva2VuLmZ1bmN0aW9uIHtcbiAgICBjb2xvcjogIzYxYWZlZjtcbn1cblxuLnRva2VuLnJlZ2V4LFxuLnRva2VuLmltcG9ydGFudCxcbi50b2tlbi52YXJpYWJsZSB7XG4gICAgY29sb3I6ICNjNjc4ZGQ7XG59XG5cbi50b2tlbi5pbXBvcnRhbnQsXG4udG9rZW4uYm9sZCB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi50b2tlbi5pdGFsaWMge1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLnRva2VuLmVudGl0eSB7XG4gICAgY3Vyc29yOiBoZWxwO1xufVxuXG5wcmUubGluZS1udW1iZXJzIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZy1sZWZ0OiAzLjhlbTtcbiAgICBjb3VudGVyLXJlc2V0OiBsaW5lbnVtYmVyO1xufVxuXG5wcmUubGluZS1udW1iZXJzID4gY29kZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ubGluZS1udW1iZXJzIC5saW5lLW51bWJlcnMtcm93cyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIHRvcDogMDtcbiAgICBmb250LXNpemU6IDEwMCU7XG4gICAgbGVmdDogLTMuOGVtO1xuICAgIHdpZHRoOiAzZW07IC8qIHdvcmtzIGZvciBsaW5lLW51bWJlcnMgYmVsb3cgMTAwMCBsaW5lcyAqL1xuICAgIGxldHRlci1zcGFjaW5nOiAtMXB4O1xuICAgIGJvcmRlci1yaWdodDogMDtcblxuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbi5saW5lLW51bWJlcnMtcm93cyA+IHNwYW4ge1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNvdW50ZXItaW5jcmVtZW50OiBsaW5lbnVtYmVyO1xufVxuXG4ubGluZS1udW1iZXJzLXJvd3MgPiBzcGFuOmJlZm9yZSB7XG4gICAgY29udGVudDogY291bnRlcihsaW5lbnVtYmVyKTtcbiAgICBjb2xvcjogIzVjNjM3MDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nLXJpZ2h0OiAwLjhlbTtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbn1cbiIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIyBSRVNFVFNcbi8vXG4vLyBUYWNrbGluZyB0aGUgaGFyZCBzdHVmZiwgbG9sXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuaHRtbCB7XG4gIG1heC13aWR0aDogMTAwdnc7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgLy8gb3ZlcmZsb3cteTogc2Nyb2xsO1xufVxuXG4udWstb2ZmY2FudmFzLWNvbnRhaW5lcixcbi51ay1vZmZjYW52YXMtcGFnZSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi51ay1vZmZjYW52YXMtb3ZlcmxheTo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwuNzUpO1xufVxuXG4ubm9zY3JvbGwge1xuICBvdmVyZmxvdy15OiBoaWRkZW4gIWltcG9ydGFudDtcbiAgLy8gaGVpZ2h0OiAxMDB2aCAhaW1wb3J0YW50O1xuICAvLyBtYXgtaGVpZ2h0OiAxMDB2aCAhaW1wb3J0YW50O1xufVxuXG4vLyAudWstY2hpbGQtd2lkdGgtMS0zXFxAbCA+ICoge1xuLy8gICB3aWR0aDogMzMuMzMlICFpbXBvcnRhbnQ7XG4vLyB9XG5cbi8vIGJvZHkge1xuLy8gICAmOjotd2Via2l0LXNjcm9sbGJhciB7XG4vLyAgICAgd2lkdGg6IDEwcHg7XG4vLyAgIH1cbi8vIH1cbi8vXG4vLyBib2R5Ojotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XG4vLyAgIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAwIDJweCByZ2JhKDAsMCwwLDAuMyk7XG4vLyB9XG4vL1xuLy8gYm9keSxcbi8vICNvZmZjYW52YXMge1xuLy8gICAmOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4vLyAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWFjY2VudDtcbi8vICAgICBvdXRsaW5lOiAxcHggc29saWQgJGNvbG9yLWFjY2VudDtcbi8vICAgfVxuLy8gfVxuIiwiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAjIFRZUE9HUkFQSFlcbi8vXG4vLyBHbG9iYWwgdHlwb2dyYXBoaWMgc3R5bGVzIGZvciBnaWZ0d3JhcGNyZWF0aW9ucy5jb21cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICMgU0NBTElORyAvIFJFU1BPTlNJVkUgVFlQRVxuLy8gaHR0cHM6Ly9jb2RlcGVuLmlvL01hZGVCeU1pa2UvcGVuL1lQSkpZdlxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAjIyBTQ0FMSU5HID0+IFJPT1Rcbi8vIFRoZXNlIHZhbHVlcyBhcmUgdGhlIG1pbmltdW0gYW5kIG1heGltdW0gdmlld3BvcnRcbi8vIHNpemVzIHRvIGFwcGx5IHRoZSBmb250IHNjYWxpbmdcbiRtaW5fd2lkdGg6IDQwMDtcbiRtYXhfd2lkdGg6IDc0MDtcblxuLy8gVGhlc2UgdmFsdWVzIHJlcHJlc2VudCB0aGUgcmFuZ2Ugb2YgZm9uLXRzaXplIHRvIGFwcGx5XG4vLyBUaGVzZSB2YWx1ZXMgZWZmZWN0IHRoZSBiYXNlIGZvbnQtc2l6ZSwgaGVhZGluZ3MgYW5kXG4vLyBvdGhlciBlbGVtZW50cyB3aWxsIHNjYWxlIHByb3BvcnRpb25hbGx5XG4kbWluX2ZvbnQ6IDE2O1xuJG1heF9mb250OiAxOTtcblxuOnJvb3Qge1xuICAgIGZvbnQtc2l6ZTogI3skbWluX2ZvbnR9cHg7XG59XG5cbi8vIFRoaXMgcGFydCBpcyBhIGxpdHRsZSBiaXQgdWdseVxuQG1lZGlhIChtaW4td2lkdGg6ICN7JG1pbl93aWR0aH1weCkgYW5kIChtYXgtd2lkdGg6ICN7JG1heF93aWR0aH1weCkge1xuICAgIDpyb290IHtcbiAgICAgICAgZm9udC1zaXplOiBjYWxjKFxuICAgICAgICAgICAgI3skbWluX2ZvbnR9cHggKyAoI3skbWF4X2ZvbnR9IC0gI3skbWluX2ZvbnR9KSAqXG4gICAgICAgICAgICAgICAgKCgxMDB2dyAtICN7JG1pbl93aWR0aH1weCkgLyAoI3skbWF4X3dpZHRofSAtICN7JG1pbl93aWR0aH0pKVxuICAgICAgICApO1xuICAgIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICN7JG1heF93aWR0aH1weCkge1xuICAgIDpyb290IHtcbiAgICAgICAgZm9udC1zaXplOiAjeyRtYXhfZm9udH1weDtcbiAgICB9XG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyBTQ0FMSU5HID0+IDxoMT5cbiRoMV9taW5fZm9udDogMjY7XG4kaDFfbWF4X2ZvbnQ6IDQ2O1xuXG5oMSB7XG4gICAgZm9udC1zaXplOiAjeyRoMV9taW5fZm9udH1weDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICN7JG1pbl93aWR0aH1weCkgYW5kIChtYXgtd2lkdGg6ICN7JG1heF93aWR0aH1weCkge1xuICAgIGgxIHtcbiAgICAgICAgZm9udC1zaXplOiBjYWxjKFxuICAgICAgICAgICAgI3skaDFfbWluX2ZvbnR9cHggKyAoI3skaDFfbWF4X2ZvbnR9IC0gI3skaDFfbWluX2ZvbnR9KSAqXG4gICAgICAgICAgICAgICAgKCgxMDB2dyAtICN7JG1pbl93aWR0aH1weCkgLyAoI3skbWF4X3dpZHRofSAtICN7JG1pbl93aWR0aH0pKVxuICAgICAgICApO1xuICAgIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICN7JG1heF93aWR0aH1weCkge1xuICAgIGgxIHtcbiAgICAgICAgZm9udC1zaXplOiAjeyRoMV9tYXhfZm9udH1weDtcbiAgICB9XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIyBGTFVJRCBMSU5FIEhFSUdIVFxuLy8gZm9ya2VkIHZpYSDigJQgaHR0cHM6Ly9jb2RlcGVuLmlvL01hZGVCeU1pa2UvcGVuL3ZYdlFqWVxuLy8gY29kZXBlbi5pby9NYWRlQnlNaWtlL3Blbi83NzQ0YjVmYzQ0NWUyYjM0YTllMmJiMWUyMWU4YjA5Y1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5AbWl4aW4gZmx1aWQtdHlwZShcbiAgICAkcHJvcGVydGllcyxcbiAgICAkbWluLXNjcmVlbixcbiAgICAkbWF4LXNjcmVlbixcbiAgICAkbWluLXZhbHVlLFxuICAgICRtYXgtdmFsdWVcbikge1xuICAgICYge1xuICAgICAgICBAZWFjaCAkcHJvcGVydHkgaW4gJHByb3BlcnRpZXMge1xuICAgICAgICAgICAgI3skcHJvcGVydHl9OiAkbWluLXZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJG1pbi1zY3JlZW4pIHtcbiAgICAgICAgICAgIEBlYWNoICRwcm9wZXJ0eSBpbiAkcHJvcGVydGllcyB7XG4gICAgICAgICAgICAgICAgI3skcHJvcGVydHl9OiBjYWxjLWludGVycG9sYXRpb24oXG4gICAgICAgICAgICAgICAgICAgICRtaW4tc2NyZWVuLFxuICAgICAgICAgICAgICAgICAgICAkbWluLXZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAkbWF4LXNjcmVlbixcbiAgICAgICAgICAgICAgICAgICAgJG1heC12YWx1ZVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkbWF4LXNjcmVlbikge1xuICAgICAgICAgICAgQGVhY2ggJHByb3BlcnR5IGluICRwcm9wZXJ0aWVzIHtcbiAgICAgICAgICAgICAgICAjeyRwcm9wZXJ0eX06ICRtYXgtdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBmdW5jdGlvbiBjYWxjLWludGVycG9sYXRpb24oJG1pbi1zY3JlZW4sICRtaW4tdmFsdWUsICRtYXgtc2NyZWVuLCAkbWF4LXZhbHVlKSB7XG4gICAgJGE6ICgkbWF4LXZhbHVlIC0gJG1pbi12YWx1ZSkgLyAoJG1heC1zY3JlZW4gLSAkbWluLXNjcmVlbik7XG4gICAgJGI6ICRtaW4tdmFsdWUgLSAkYSAqICRtaW4tc2NyZWVuO1xuXG4gICAgJHNpZ246ICcrJztcblxuICAgIEBpZiAoJGIgPCAwKSB7XG4gICAgICAgICRzaWduOiAnLSc7XG4gICAgICAgICRiOiBhYnMoJGIpO1xuICAgIH1cblxuICAgIEByZXR1cm4gY2FsYygjeyRhICogMTAwfXZ3ICN7JHNpZ259ICN7JGJ9KTtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vL1xuLy8gIyBCT0RZXG4vL1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAjIyBCT0RZID0+IEJBU0UgU0VUVElOR1NcbmJvZHkge1xuICAgIGZvbnQtZmFtaWx5OiBHZW9yZ2lhLCAnTG9yYScsICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XG4gICAgQGluY2x1ZGUgZmx1aWQtdHlwZSgnbGluZS1oZWlnaHQnLCAyMmVtLCA0NWVtLCAxLjQ1ZW0sIDEuNjVlbSk7XG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyBCT0RZID0+IE1hcmdpbnNcbi8vIFJlbW92ZXMgdGhlIG1hcmdpbiBmcm9tIHRoZSBmaW5hbCA8ZWxlbWVudD4gdGFnIGluIGEgc2VjdGlvblxuYWRkcmVzcyxcbmRsLFxuZmllbGRzZXQsXG5maWd1cmUsXG5vbCxcbnAsXG5wcmUsXG51bCB7XG4gICAgbWFyZ2luOiAwIDAgY2FsYygjeyRtaW5fZm9udH1weCAqIDAuODc1KSAwO1xufVxuXG4vLyBUaGlzIHBhcnQgaXMgYSBsaXR0bGUgYml0IHVnbHlcbkBtZWRpYSAobWluLXdpZHRoOiAjeyRtaW5fd2lkdGh9cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRtYXhfd2lkdGh9cHgpIHtcbiAgICBhZGRyZXNzLFxuICAgIGRsLFxuICAgIGZpZWxkc2V0LFxuICAgIGZpZ3VyZSxcbiAgICBvbCxcbiAgICBwLFxuICAgIHByZSxcbiAgICB1bCB7XG4gICAgICAgIG1hcmdpbjogMCAwXG4gICAgICAgICAgICBjYWxjKFxuICAgICAgICAgICAgICAgICN7JG1pbl9mb250fXB4ICsgKCN7JG1heF9mb250fSAtICN7JG1pbl9mb250fSkgKlxuICAgICAgICAgICAgICAgICAgICAoXG4gICAgICAgICAgICAgICAgICAgICAgICAoMTAwdncgLSAjeyRtaW5fd2lkdGh9cHgpIC9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoI3skbWF4X3dpZHRofSAtICN7JG1pbl93aWR0aH0pXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIDA7XG4gICAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogI3skbWF4X3dpZHRofXB4KSB7XG4gICAgYWRkcmVzcyxcbiAgICBkbCxcbiAgICBmaWVsZHNldCxcbiAgICBmaWd1cmUsXG4gICAgb2wsXG4gICAgcCxcbiAgICBwcmUsXG4gICAgdWwge1xuICAgICAgICBtYXJnaW46IDAgMCBjYWxjKCN7JG1pbl9mb250fXB4ICogMikgMDtcbiAgICB9XG59XG5cbiogKyBhZGRyZXNzLFxuKiArIGRsLFxuKiArIGZpZWxkc2V0LFxuKiArIGZpZ3VyZSxcbiogKyBvbCxcbiogKyBwLFxuKiArIHByZSxcbiogKyB1bCB7XG4gICAgbWFyZ2luLXRvcDogMDtcbn1cblxucCB7XG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG59XG5cbjo6c2VsZWN0aW9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcihhY2NlbnQsIGJhc2UpO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICMgSEVBRElOR1Ncbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIyMgSEVBRElOR1MgPT4gR0xPQkFMU1xuLy8gQmVjYXVzZSB3ZSdyZSB1c2luZyBFTXMgZm9yIGxpbmUtaGVpZ2h0LCB0aGUgSDEgKGFuZCBvdGhlciBlbGVtZW50cylcbi8vIG5lZWQgdGhlaXIgb3duIGRlY2xhcmF0aW9uIOKAkyBvdGhlcndpc2UgdGhleSBpbmhlcnJpdCB0aGUgbGluZS1oZWlnaHRcbi8vIGZyb20gdGhlIGh0bWwgZWxlbWVudCB3aGVyZSAxZW0gaXMgMTZweC5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gICAgQGluY2x1ZGUgZmx1aWQtdHlwZSgnbGluZS1oZWlnaHQnLCAyMmVtLCA0NWVtLCAxLjE0ZW0sIDEuMjVlbSk7XG4gICAgZm9udC1mYW1pbHk6ICdMYXRvJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgbGluZS1oZWlnaHQ6IDEuMDQ7XG4gICAgbGV0dGVyLXNwYWNpbmc6IC0wLjAyOGVtO1xuICAgIHBhZGRpbmc6IDRweCAwO1xuICAgIG1hcmdpbi1sZWZ0OiAtMi41cHg7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gICAgbWFyZ2luOiAwIDAgMjBweCAwO1xufVxuXG4qICsgaDEsXG4qICsgaDIsXG4qICsgaDMsXG4qICsgaDQsXG4qICsgaDUsXG4qICsgaDYge1xuICAgIG1hcmdpbi10b3A6IDQwcHg7XG59XG5cbi8vIEZpeGVzIHRoZSBsZWZ0IG1hcmdpbiBmb3IgdWstc3RpY2t5IGl0ZW1zXG4udWstc3RpY2t5LWZpeGVkIHtcbiAgICBtYXJnaW46IDAgMCAwIC0yLjVweCAhaW1wb3J0YW50O1xufVxuXG4vLyAqKy51ay1oMSwgKisudWstaDIsICorLnVrLWgzLCAqKy51ay1oNCwgKisudWstaDUsICorLnVrLWg2LCAqK2gxLCAqK2gyLCAqK2gzLCAqK2g0LCAqK2g1LCAqK2g2IHtcbi8vICAgbWFyZ2luLXRvcDogMDtcbi8vIH1cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICMjIEhFQURJTkdTID0+IGgxXG4vLyBoMSB7XG4vLyAgIGZvbnQtc2l6ZTogJHR5cGUtaGVhZGluZ3MtaDEtc2l6ZTtcbi8vICAgbGluZS1oZWlnaHQ6ICR0eXBlLWhlYWRpbmdzLWgxLWxpbmUtaGVpZ2h0O1xuLy8gICBmb250LXdlaWdodDogJHR5cGUtaGVhZGluZ3MtaDEtZm9udC13ZWlnaHQ7XG4vLyAgIGxldHRlci1zcGFjaW5nOiAkdHlwZS1oZWFkaW5ncy1oMS1sZXR0ZXItc3BhY2luZztcbi8vIH1cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICMjIEhFQURJTkdTID0+IGgyXG4vLyBoMiB7XG4vLyAgIGZvbnQtc2l6ZTogJHR5cGUtaGVhZGluZ3MtaDItc2l6ZTtcbi8vICAgbGluZS1oZWlnaHQ6ICR0eXBlLWhlYWRpbmdzLWgyLWxpbmUtaGVpZ2h0O1xuLy8gfVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gIyMgSEVBRElOR1MgPT4gaDNcbi8vIGgzIHtcbi8vICAgZm9udC1zaXplOiAkdHlwZS1oZWFkaW5ncy1oMy1zaXplO1xuLy8gICBsaW5lLWhlaWdodDogJHR5cGUtaGVhZGluZ3MtaDMtbGluZS1oZWlnaHQ7XG4vLyB9XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyBIRUFESU5HUyA9PiBoNFxuLy8gaDQge1xuLy8gICBmb250LXNpemU6ICR0eXBlLWhlYWRpbmdzLWg0LXNpemU7XG4vLyAgIGxpbmUtaGVpZ2h0OiAkdHlwZS1oZWFkaW5ncy1oNC1saW5lLWhlaWdodDtcbi8vIH1cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICMjIEhFQURJTkdTID0+IGg1XG5oNSB7XG4gICAgLy8gZm9udC1zaXplOiBpbmhlcml0O1xuICAgIC8vIGZvbnQtc2l6ZTogJHR5cGUtaGVhZGluZ3MtaDUtc2l6ZTtcbiAgICAvLyBsaW5lLWhlaWdodDogJHR5cGUtaGVhZGluZ3MtaDUtbGluZS1oZWlnaHQ7XG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyBIRUFESU5HUyA9PiBoNlxuLy8gaDYge1xuLy8gICBmb250LXNpemU6ICR0eXBlLWhlYWRpbmdzLWg2LXNpemU7XG4vLyAgIGxpbmUtaGVpZ2h0OiAkdHlwZS1oZWFkaW5ncy1oNi1saW5lLWhlaWdodDtcbi8vIH1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAjIERFRklOSVRJT04gTElTVFNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLnVrLWRlc2NyaXB0aW9uLWxpc3Qge1xuICAgICYgPiBkdCxcbiAgICAmIGRkIHtcbiAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gICAgfVxuXG4gICAgJiBkZCB7XG4gICAgICAgIGNvbG9yOiAjNjY2O1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjM1O1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4xMjVweDtcbiAgICB9XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIyBVVElMSVRJRVNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIyMgVVRJTElUSUVTID0+IFRFWFQgTEVBRFxuLy8gLndlcC10ZXh0LWxlYWQge1xuLy8gICBmb250LXNpemU6ICR0eXBlLXRleHQtbGVhZC1mb250LXNpemU7XG4vLyAgIGZvbnQtd2VpZ2h0OiAkdHlwZS10ZXh0LWxlYWQtZm9udC13ZWlnaHQ7XG4vLyAgIGxpbmUtaGVpZ2h0OiAkdHlwZS10ZXh0LWxlYWQtbGluZS1oZWlnaHQ7XG4vLyAgIGxldHRlci1zcGFjaW5nOiAkdHlwZS10ZXh0LWxlYWQtbGV0dGVyLXNwYWNpbmc7XG4vLyAgIHRleHQtdHJhbnNmb3JtOiAkdHlwZS10ZXh0LWxlYWQtdGV4dC10cmFuc2Zvcm07XG4vLyB9XG4udWstdGV4dC1sZWFkIHtcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjM0NTQ7XG4gICAgbGV0dGVyLXNwYWNpbmc6IC0wLjg2NXB4O1xufVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gIyMgVVRJTElUSUVTID0+IE1JU0MgVEVYVCBTVFlMRVNcbmVtIHtcbiAgICBjb2xvcjogaW5oZXJpdDtcbn1cbnN0cm9uZyB7XG4gICAgY29sb3I6ICMyMjI7XG59XG4udWstYXJ0aWNsZS1tZXRhIHtcbiAgICBjb2xvcjogIzc1NzU3NTtcbn0gLy8gbG93ZXN0IEFBIG9uICNmZmY7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyBVVElMSVRJRVMgPT4gUFJFICYgQ09ERVxucHJlIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICAgIC8vIHBhZGRpbmc6IDIwcHg7XG4gICAgLy8gd2hpdGUtc3BhY2U6IHByZS13cmFwO1xufVxuXG46bm90KHByZSkgPiBjb2RlLFxuOm5vdChwcmUpID4ga2JkLFxuOm5vdChwcmUpID4gc2FtcCB7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xufVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gIyMgVVRJTElUSUVTID0+IEJMT0NLUVVPVEVTXG5ibG9ja3F1b3RlIHtcbiAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC44KTtcbiAgICBmb250LXNpemU6IDEuMDVyZW07XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjAxcmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ2MjU7XG4gICAgbWFyZ2luLWxlZnQ6IDRweDtcbiAgICBvcGFjaXR5OiAwLjgyNTtcbiAgICBwYWRkaW5nOiAwIDAgMnB4IDIwcHg7XG5cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzQwcHgpIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgfVxufVxuIiwiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAjIExJTktTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmEsXG5hOmxpbmssXG5hOnZpc2l0ZWQge1xuICAgIGNvbG9yOiB2YXIoLS1jb2xvci1wcmltYXJ5KTtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdHJhbnNpdGlvbjogYWxsIDE1MG1zIGN1YmljLWJlemllcigwLjg2MCwgMC4wMDAsIDAuMDcwLCAxLjAwMCk7XG4gICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjg2MCwgMC4wMDAsIDAuMDcwLCAxLjAwMCk7XG5cbiAgICAmOmhvdmVyLCAmOmZvY3VzIHtcbiAgICAgICAgY29sb3I6IGJsYWNrO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxuXG4gICAgJi50b2tlbiB7IGNvbG9yOiBpbmhlcml0OyB9XG59XG4iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQU5JTUFUSU9OIERFTEFZU1xuLy9cbi8vIEFkZCB0aGUgY2xhc3MgdG8geW91ciBlbGVtZW50IGFjY29yZGluZyB0byB0aGUgZGVsYXkgeW91IHdhbnQuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5cblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy9cbi8vICMgQU5JTUFURS5DU1Ncbi8vIGh0dHBzOi8vZGFuZWRlbi5naXRodWIuaW8vYW5pbWF0ZS5jc3MvXG4vL1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICMjIEFuaW1hdGlvbnMga2VwdCBmcm9tIGFuaW1hdGUuY3NzIGFyZSBhcyBmb2xsb3dzOlxuLy9cbi8vIC5ib3VuY2UsIC5zaGFrZSAudGFkYVxuLy8gLmZhZGVJbkRvd24sIC5mYWRlSW5MZWZ0LCAuZmFkZUluUmlnaHQsIC5mYWRlSW5VcFxuLy8gLmZhZGVPdXREb3duLCAuZmFkZU91dExlZnQsIC5mYWRlT3V0UmlnaHQsIC5mYWRlT3V0VXBcblxuXG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICMjIEhlbHBlciBjbGFzc2VzIHRoYXQgYWRkIGRlbGF5cyB0byB0aGUgbnVtYmVyIG9mIGNoaWxkIGVsZW1lbnRzIHNldCBpblxuLy8gaW5jcmVtZW50cyBvZiAyMDBtcyBlYWNoLlxuXG4vLyBQYXJlbnQgcm93IHdpdGggMSBjaGlsZCBlbGVtZW50cy5cbi5hbmltYXRpb24tZGVsYXktMSB7XG4gICYgLmVsZW1lbnRvci1yb3cgPiAuZWxlbWVudG9yLWNvbHVtbiB7XG4gICAgJjpudGgtY2hpbGQoMSkgeyBhbmltYXRpb24tZGVsYXk6IDIwMG1zOyB9XG4gICAgJjpudGgtY2hpbGQoMikgeyBhbmltYXRpb24tZGVsYXk6IDQwMG1zOyB9XG4gIH1cbn1cblxuLy8gUGFyZW50IHJvdyB3aXRoIDIgY2hpbGQgZWxlbWVudHMuXG4uYW5pbWF0aW9uLWRlbGF5LTIge1xuICAmIC5lbGVtZW50b3Itcm93ID4gLmVsZW1lbnRvci1jb2x1bW4ge1xuICAgICY6bnRoLWNoaWxkKDEpIHsgYW5pbWF0aW9uLWRlbGF5OiAyMDBtczsgfVxuICAgICY6bnRoLWNoaWxkKDIpIHsgYW5pbWF0aW9uLWRlbGF5OiA0MDBtczsgfVxuICB9XG59XG5cbi8vIFBhcmVudCByb3cgd2l0aCAzIGNoaWxkIGVsZW1lbnRzLlxuLmFuaW1hdGlvbi1kZWxheS0zIHtcbiAgJiAuZWxlbWVudG9yLXJvdyA+IC5lbGVtZW50b3ItY29sdW1uIHtcbiAgICAmOm50aC1jaGlsZCgxKSB7IGFuaW1hdGlvbi1kZWxheTogMjAwbXM7IH1cbiAgICAmOm50aC1jaGlsZCgyKSB7IGFuaW1hdGlvbi1kZWxheTogNDAwbXM7IH1cbiAgICAmOm50aC1jaGlsZCgzKSB7IGFuaW1hdGlvbi1kZWxheTogNjAwbXM7IH1cbiAgfVxufVxuXG4vLyBQYXJlbnQgcm93IHdpdGggNCBjaGlsZCBlbGVtZW50cy5cbi5hbmltYXRpb24tZGVsYXktNCB7XG4gICYgLmVsZW1lbnRvci1yb3cgPiAuZWxlbWVudG9yLWNvbHVtbiB7XG4gICAgJjpudGgtY2hpbGQoMSkgeyBhbmltYXRpb24tZGVsYXk6IDIwMG1zOyB9XG4gICAgJjpudGgtY2hpbGQoMikgeyBhbmltYXRpb24tZGVsYXk6IDQwMG1zOyB9XG4gICAgJjpudGgtY2hpbGQoMykgeyBhbmltYXRpb24tZGVsYXk6IDYwMG1zOyB9XG4gICAgJjpudGgtY2hpbGQoNCkgeyBhbmltYXRpb24tZGVsYXk6IDgwMG1zOyB9XG4gIH1cbn1cbiIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBCT1JERVIgU1RZTEVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4ucGFuc2t5LWJvcmRlciB7XG5cbiAgJi1tdXRlZCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgY29sb3IoZ3JheSwgbGlnaHQpO1xuICB9XG59XG4iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRElTUExBWVxuLy8gQWRkIHRoZSBjbGFzcyB0byB5b3VyIGVsZW1lbnQgYWNjb3JkaW5nIHRvIHRoZSBkaXNwbGF5IHlvdSB3YW50LlxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi53ZXAtZGlzcGxheSB7XG5cbiAgLy8gQmxvY2tcbiAgJi1ibG9jayB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgfVxuXG4gIC8vIEZsZXhcbiAgJi1mbGV4IHtcbiAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XG4gIH1cblxufVxuXG5cblxuLmZhZGUtZW50ZXItYWN0aXZlLCAuZmFkZS1sZWF2ZS1hY3RpdmUge1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IC41c1xufVxuLmZhZGUtZW50ZXIsIC5mYWRlLWxlYXZlLXRvIC8qIC5mYWRlLWxlYXZlLWFjdGl2ZSBpbiA8Mi4xLjggKi8ge1xuICBvcGFjaXR5OiAwXG59XG4iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICMgU0hBRE9XU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAjIyBTSEFET1dTID0+IE1hdGVyaWFsIERlc2lnbiBCb3ggU2hhZG93c1xuLy8gaHR0cHM6Ly9jb2RlcGVuLmlvL3NkdGhvcm50b24vcGVuL3dCWmRYcVxuLnotZGVwdGgtMSB7XG4gIGJveC1zaGFkb3c6ICRzaGFkb3ctbWF0ZXJpYWwtZGVwdGgtMTtcbiAgdHJhbnNpdGlvbjogJHNoYWRvdy1tYXRlcmlhbC10cmFuc2l0aW9uO1xufVxuXG4uei1kZXB0aC0yIHtcbiAgYm94LXNoYWRvdzogJHNoYWRvdy1tYXRlcmlhbC1kZXB0aC0yO1xuICB0cmFuc2l0aW9uOiAkc2hhZG93LW1hdGVyaWFsLXRyYW5zaXRpb247XG59XG5cbi56LWRlcHRoLTMge1xuICBib3gtc2hhZG93OiAkc2hhZG93LW1hdGVyaWFsLWRlcHRoLTM7XG4gIHRyYW5zaXRpb246ICRzaGFkb3ctbWF0ZXJpYWwtdHJhbnNpdGlvbjtcbn1cblxuLnotZGVwdGgtNCB7XG4gIGJveC1zaGFkb3c6ICRzaGFkb3ctbWF0ZXJpYWwtZGVwdGgtNDtcbiAgdHJhbnNpdGlvbjogJHNoYWRvdy1tYXRlcmlhbC10cmFuc2l0aW9uO1xufVxuXG4uei1kZXB0aC01IHtcbiAgYm94LXNoYWRvdzogJHNoYWRvdy1tYXRlcmlhbC1kZXB0aC01O1xuICB0cmFuc2l0aW9uOiAkc2hhZG93LW1hdGVyaWFsLXRyYW5zaXRpb247XG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyA8ZmlndXJlPiBJTUcgQk9YIFNIQURPV1Ncbi8vIFRoaXMgaXMgdG8gYXZvaWQgd3JhcHBpbmcgdGhlIGVudGlyZSBmaWd1cmUgKGluY2x1ZGluZyB0aGVcbi8vIGNhcHRpb24pIGluIHRoZSBib3ggc2hhZG93OyB0aGlzIHRhcmdldHMgdGhlIGltYWdlIGl0c2VsZi5cbi5jYXB0aW9uIHtcblxuICAvLyAjIyBTSEFET1dTID0+IE1hdGVyaWFsIERlc2lnbiBCb3ggU2hhZG93c1xuICAmLXotZGVwdGgtMSB7ICYgaW1nIHsgQGV4dGVuZCAuei1kZXB0aC0xOyB9IH1cbiAgJi16LWRlcHRoLTIgeyAmIGltZyB7IEBleHRlbmQgLnotZGVwdGgtMjsgfSB9XG4gICYtei1kZXB0aC0zIHsgJiBpbWcgeyBAZXh0ZW5kIC56LWRlcHRoLTM7IH0gfVxuICAmLXotZGVwdGgtNCB7ICYgaW1nIHsgQGV4dGVuZCAuei1kZXB0aC00OyB9IH1cbiAgJi16LWRlcHRoLTUgeyAmIGltZyB7IEBleHRlbmQgLnotZGVwdGgtNTsgfSB9XG5cbiAgLy8gIyMgU0hBRE9XUyA9PiBVSWtpdCBTaGFkb3dzXG4gICYtdWstYm94LXNoYWRvdy1zbWFsbCB7ICYgaW1nIHsgYm94LXNoYWRvdzogMCAycHggOHB4IHJnYmEoMCwwLDAsMC4wOCk7IH0gfVxuICAmLXVrLWJveC1zaGFkb3ctbWVkaXVtIHsgJiBpbWcgeyBib3gtc2hhZG93OiAwIDVweCAxNXB4IHJnYmEoMCwwLDAsMC4wOCk7IH0gfVxuICAmLXVrLWJveC1zaGFkb3ctbGFyZ2UgeyAmIGltZyB7IGJveC1zaGFkb3c6IDAgMTRweCAyNXB4IHJnYmEoMCwwLDAsMC4xNik7IH0gfVxuICAmLXVrLWJveC1zaGFkb3cteGxhcmdlIHsgJiBpbWcgeyBib3gtc2hhZG93OiAwIDI4cHggNTBweCByZ2JhKDAsMCwwLDAuMTYpOyB9IH1cbn1cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICMjIEJPWCBTSEFET1cgQk9UVE9NXG4ud2VwLWJveC1zaGFkb3ctYm90dG9tIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcblxuICAmOmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMzBweDtcbiAgICBsZWZ0OiAxMHB4O1xuICAgIHJpZ2h0OiAxMHB4O1xuICAgIGhlaWdodDogMzBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgIGJhY2tncm91bmQ6ICM5OTk7XG4gICAgZmlsdGVyOiBibHVyKDZweCk7XG4gIH1cbn1cbiIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAjIENPTkZJR1xuLy9cbi8vIFNldHRpbmdzIHVzaW5nIHRoZSBfZGVmaW5pdGlvbnMuc2NjIHZhcmlhYmxlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICMgVFJBTlNJVElPTlNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4kdHJhbnNpdGlvbi1lYXNlLWZhc3Q6ICAgIDEwMG1zIGVhc2UtaW4tb3V0O1xuJHRyYW5zaXRpb24tZWFzZS1ub3JtYWw6ICAzMDBtcyBlYXNlLWluLW91dDtcbiR0cmFuc2l0aW9uLWVhc2Utc2xvdzogICAgNjAwbXMgZWFzZS1pbi1vdXQ7XG4kdHJhbnNpdGlvbi1lYXNlLXNsb3dlcjogIDkwMG1zIGVhc2UtaW4tb3V0O1xuXG5cblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIyBTSEFET1dTXG4vLyBodHRwczovL2NvZGVwZW4uaW8vc2R0aG9ybnRvbi9wZW4vd0JaZFhxXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuJHNoYWRvdy1tYXRlcmlhbC1kZXB0aC0xOiAgICAwIDFweCAzcHggcmdiYSgwLDAsMCwwLjEyKSwgMCAxcHggMnB4IHJnYmEoMCwwLDAsMC4yNCk7XG4kc2hhZG93LW1hdGVyaWFsLWRlcHRoLTI6ICAgIDAgM3B4IDZweCByZ2JhKDAsMCwwLDAuMTYpLCAwIDNweCA2cHggcmdiYSgwLDAsMCwwLjIzKTtcbiRzaGFkb3ctbWF0ZXJpYWwtZGVwdGgtMzogICAgMCAxMHB4IDIwcHggcmdiYSgwLDAsMCwwLjE5KSwgMCA2cHggNnB4IHJnYmEoMCwwLDAsMC4yMyk7XG4kc2hhZG93LW1hdGVyaWFsLWRlcHRoLTQ6ICAgIDAgMTRweCAyOHB4IHJnYmEoMCwwLDAsMC4yNSksIDAgMTBweCAxMHB4IHJnYmEoMCwwLDAsMC4yMik7XG4kc2hhZG93LW1hdGVyaWFsLWRlcHRoLTU6ICAgIDAgMTlweCAzOHB4IHJnYmEoMCwwLDAsMC4zMCksIDAgMTVweCAxMnB4IHJnYmEoMCwwLDAsMC4yMik7XG4kc2hhZG93LW1hdGVyaWFsLWRlcHRoLTY6ICAgIDAgMjNweCAzOHB4IHJnYmEoMCwwLDAsMC4zMCksIDAgMTlweCAxMnB4IHJnYmEoMCwwLDAsMC4yMik7XG4kc2hhZG93LW1hdGVyaWFsLXRyYW5zaXRpb246IGFsbCAwLjNzIGN1YmljLWJlemllciguMjUsLjgsLjI1LDEpO1xuXG5cblxuXG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAjIEdSSUQgU0VUVElOR1Ncbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAjIyBHUklEIFNFVFRJTkdTID0+IEdMT0JBTFNcblxuXG5cblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIyBUWVBPR1JBUEhZXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIyMgVFlQT0dSQVBIWSA9PiBNQVBcblxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyBUWVBPR1JBUEhZID0+IEhFQURJTkdTID0+IEdMT0JBTFNcbi8vICR0eXBlLWhlYWRpbmdzLWNvbG9yOiAgICAgICAgICAgICAgICAgICAkY29sb3ItYmxhY2stYWx0O1xuJHR5cGUtaGVhZGluZ3MtZm9udC13ZWlnaHQ6ICAgICAgICAgICAgIDkwMDtcbiR0eXBlLWhlYWRpbmdzLXRleHQtdHJhbnNmb3JtOiAgICAgICAgICB1cHBlcmNhc2U7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyBUWVBPR1JBUEhZID0+IEhFQURJTkdTID0+IFNJWkVTXG4vLyBTaXplcyBiYXNlZCBvbiB0aGUgMS42MTggR29sZGVuIFJhdGlvXG4vLyBodHRwOi8vdHlwZS1zY2FsZS5jb20vXG4kdHlwZS1oZWFkaW5ncy1oMS1zaXplOiAgICAgICAgICAgICAgICAgNC4yNXJlbTtcbiR0eXBlLWhlYWRpbmdzLWgyLXNpemU6ICAgICAgICAgICAgICAgICAyLjYyNXJlbTtcbiR0eXBlLWhlYWRpbmdzLWgzLXNpemU6ICAgICAgICAgICAgICAgICAxLjYyNXJlbTtcbiR0eXBlLWhlYWRpbmdzLWg0LXNpemU6ICAgICAgICAgICAgICAgICAxcmVtO1xuJHR5cGUtaGVhZGluZ3MtaDUtc2l6ZTogICAgICAgICAgICAgICAgIC44MjVyZW07XG4kdHlwZS1oZWFkaW5ncy1oNi1zaXplOiAgICAgICAgICAgICAgICAgLjYyNXJlbTtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICMjIFRZUE9HUkFQSFkgPT4gSEVBRElOR1MgPT4gRVhUUkFTXG4kdHlwZS1oZWFkaW5ncy1oMS1mb250LXdlaWdodDogICAgICAgICAgYm9sZDtcbiR0eXBlLWhlYWRpbmdzLWgxLWxpbmUtaGVpZ2h0OiAgICAgICAgICAuOTtcbiR0eXBlLWhlYWRpbmdzLWgxLWxldHRlci1zcGFjaW5nOiAgICAgICAtMnB4O1xuXG4kdHlwZS1oZWFkaW5ncy1oMi1saW5lLWhlaWdodDogICAgICAgICAgMS4xO1xuJHR5cGUtaGVhZGluZ3MtaDMtbGluZS1oZWlnaHQ6ICAgICAgICAgIDEuMTtcbiR0eXBlLWhlYWRpbmdzLWg0LWxpbmUtaGVpZ2h0OiAgICAgICAgICAxLjE7XG4kdHlwZS1oZWFkaW5ncy1oNS1saW5lLWhlaWdodDogICAgICAgICAgMS4xO1xuJHR5cGUtaGVhZGluZ3MtaDYtbGluZS1oZWlnaHQ6ICAgICAgICAgIDEuMTtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICMjIFRZUE9HUkFQSFkgPT4gVVRJTElUSUVTID0+IFRFWFQgTEVBRFxuJHR5cGUtdGV4dC1sZWFkLWZvbnQtc2l6ZTogICAgICAgICAgICAgIDEuMjVyZW07XG4kdHlwZS10ZXh0LWxlYWQtZm9udC13ZWlnaHQ6ICAgICAgICAgICAgMzAwO1xuJHR5cGUtdGV4dC1sZWFkLWxpbmUtaGVpZ2h0OiAgICAgICAgICAgIDEuNDU7XG4kdHlwZS10ZXh0LWxlYWQtbGV0dGVyLXNwYWNpbmc6ICAgICAgICAgLjAxNnJlbTtcbiR0eXBlLXRleHQtbGVhZC10ZXh0LXRyYW5zZm9ybTogICAgICAgICBub25lO1xuXG5cblxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIyBOQVZCQVJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAjIyBOQVZCQVIgPT4gR0xPQkFMU1xuJG5hdmJhci1sb2dvLW1heC13aWR0aDogICAgICAgICAgICAgICAgIDEwMHB4O1xuJG5hdmJhci1ib3JkZXItY29sb3I6ICAgICAgICAgICAgICAgICAgIGNvbG9yKGdyYXksIGxpZ2h0KTtcbiRuYXZiYXItd3JhcHBlci1ib3gtc2hhZG93OiAgICAgICAgICAgICAwIDJweCAzcHggcmdiYSgwLDAsMCwwLjAyKSwgMCAycHggMnB4IHJnYmEoMCwwLDAsMC4xNCk7XG4kbmF2YmFyLXdyYXBwZXItcGFkZGluZzogICAgICAgICAgICAgICAgMDtcbiRuYXZiYXItd3JhcHBlci1pbm5lci1wYWRkaW5nOiAgICAgICAgICAxMHB4O1xuJG5hdmJhci13cmFwcGVyLW1hcmdpbjogICAgICAgICAgICAgICAgIDAgYXV0bztcbiRuYXZiYXItd3JhcHBlci1tYXgtd2lkdGg6ICAgICAgICAgICAgICAxNjAwcHg7XG5cbiRuYXZiYXItbGluay1mb250LXdlaWdodDogICAgICAgICAgICAgICBib2xkO1xuJG5hdmJhci1saW5rLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgIDEuMjVyZW07XG4kbmF2YmFyLWxpbmstdGV4dC10cmFuc2Zvcm06ICAgICAgICAgICAgdXBwZXJjYXNlO1xuJG5hdmJhci1saW5rLXRyYW5zaXRpb24tc3BlZWQ6ICAgICAgICAgICR0cmFuc2l0aW9uLWVhc2Utbm9ybWFsO1xuXG4kbmF2YmFyLXNlYXJjaC1iYWNrZ3JvdW5kLWNvbG9yOiAgICAgICAgdHJhbnNwYXJlbnQ7XG4kbmF2YmFyLXNlYXJjaC1ib3gtc2hhZG93OiAgICAgICAgICAgICAgbm9uZTtcbiRuYXZiYXItc2VhcmNoLWJvcmRlcjogICAgICAgICAgICAgICAgICAxcHggc29saWQgY29sb3IoZ3JheSwgbGlnaHQpO1xuXG5cblxuXG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAjIEZPT1RFUlxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICMjIEZPT1RFUiA9PiBXUkFQUEVSXG4kZm9vdGVyLXdyYXBwZXItbWF4LXdpZHRoOiAgICAgICAgICAgICAgMTYwMHB4O1xuJGZvb3Rlci13cmFwcGVyLXBhZGRpbmc6ICAgICAgICAgICAgICAgIDEwcHg7XG4kZm9vdGVyLXdyYXBwZXItbWFyZ2luOiAgICAgICAgICAgICAgICAgMCBhdXRvO1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gIyMgRk9PVEVSID0+IFdJREdFVCBUSVRMRVNcbiRmb290ZXItd2lkZ2V0LXRpdGxlLWNvbG9yOiAgICAgICAgICAgICAjZmZmO1xuJGZvb3Rlci13aWRnZXQtdGl0bGUtZm9udC1zaXplOiAgICAgICAgIDFyZW07XG4kZm9vdGVyLXdpZGdldC10aXRsZS1mb250LXdlaWdodDogICAgICAgYm9sZDtcbiRmb290ZXItd2lkZ2V0LXRpdGxlLXRleHQtdHJhbnNmb3JtOiAgICB1cHBlcmNhc2U7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyBGT09URVIgPT4gV0lER0VUIE1FTlUgTElOS1Ncbi8vICRmb290ZXItd2lkZ2V0LW1lbnUtbGlua3MtY29sb3I6ICAgICAgICAkY29sb3ItZ3JheS1BQUE7XG4kZm9vdGVyLXdpZGdldC1tZW51LWxpbmtzLWNvbG9yLWhvdmVyOiAgI2ZmZjtcbiRmb290ZXItd2lkZ2V0LWxpbmtzLXRyYW5zaXRpb246ICAgICAgICAkdHJhbnNpdGlvbi1lYXNlLXNsb3dlcjtcbiRmb290ZXItd2lkZ2V0LWxpbmtzLXRyYW5zaXRpb24taG92ZXI6ICAkdHJhbnNpdGlvbi1lYXNlLWZhc3Q7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyBGT09URVIgPT4gV0lER0VUIE1FTlUgTElOS1MgPT4gQ1VSUkVOVCBNRU5VIElURU1cbiRmb290ZXItbWVudS1jdXJyZW50LWljb246ICAgICAgICAgICAgICBcIlxcZjBkYVwiOyAvLyBmb250YXdlc29tZS5pby9pY29uL2NhcmV0LXJpZ2h0L1xuJGZvb3Rlci1tZW51LWN1cnJlbnQtY29sb3I6ICAgICAgICAgICAgICNmZmY7XG4kZm9vdGVyLW1lbnUtY3VycmVudC1mb250LXdlaWdodDogICAgICAgYm9sZDtcbiRmb290ZXItbWVudS1jdXJyZW50LXRleHQtdHJhbnNmb3JtOiAgICB1cHBlcmNhc2U7XG5cblxuXG5cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICMgQlVUVE9OU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICMjIEJVVFRPTlMgPT4gR0xPQkFMXG4kYnV0dG9uLWdsb2JhbC1ib3JkZXItcmFkaXVzOiAgICAgICAgIDA7XG4kYnV0dG9uLWdsb2JhbC10cmFuc2l0aW9uLXNwZWVkOiAgICAgICR0cmFuc2l0aW9uLWVhc2Utbm9ybWFsO1xuJGJ1dHRvbi1nbG9iYWwtZm9udC13ZWlnaHQ6ICAgICAgICAgICBib2xkO1xuJGJ1dHRvbi1nbG9iYWwtdGV4dC10cmFuc2Zvcm06ICAgICAgICB1cHBlcmNhc2U7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyBCVVRUT05TID0+IERFRkFVTFRcbi8vIGZvcmtlZCB2aWEgaHR0cHM6Ly9idHRuLnN1cmdlLnNoLyBcImJ0bi1maWxsXCJcbiRidXR0b24tZGVmYXVsdC1jb2xvcjogICAgICAgICAgICAgICAgI2ZmZjtcbi8vICRidXR0b24tZGVmYXVsdC1jb2xvci1ob3ZlcjogICAgICAgICAgJGNvbG9yLWJsYWNrLWFsdDtcbi8vICRidXR0b24tZGVmYXVsdC1iYWNrZ3JvdW5kOiAgICAgICAgICAgJGNvbG9yLWJsYWNrLWFsdDtcbiRidXR0b24tZGVmYXVsdC1iYWNrZ3JvdW5kLWhvdmVyOiAgICAgI2ZmZjtcbiRidXR0b24tZGVmYXVsdC1ib3JkZXItc2l6ZTogICAgICAgICAgMnB4O1xuJGJ1dHRvbi1kZWZhdWx0LWJvcmRlci1zdHlsZTogICAgICAgICBzb2xpZDtcbiRidXR0b24tZGVmYXVsdC1ib3JkZXItY29sb3I6ICAgICAgICAgdHJhbnNwYXJlbnQ7XG4vLyAkYnV0dG9uLWRlZmF1bHQtYm9yZGVyLWNvbG9yLWhvdmVyOiAgICRjb2xvci1ibGFjay1hbHQ7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyBCVVRUT05TID0+IFJBRElPQUNUSVZFXG4vLyBodHRwOi8venVyYi5jb20vcGxheWdyb3VuZC9yYWRpb2FjdGl2ZS1idXR0b25zXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyBCVVRUT05TID0+IFNVQk1JVFxuLy8gJGJ1dHRvbi1mb3JtLXN1Ym1pdC1jb2xvcjogICAgICAgICAgICAkY29sb3ItcHJpbWFyeTtcbi8vICRidXR0b24tZm9ybS1zdWJtaXQtY29sb3ItaG92ZXI6ICAgICAgJGNvbG9yLWFjY2VudDtcbi8vICRidXR0b24tZm9ybS1zdWJtaXQtYmFja2dyb3VuZDogICAgICAgJGNvbG9yLWFjY2VudDtcbi8vICRidXR0b24tZm9ybS1zdWJtaXQtYmFja2dyb3VuZC1ob3ZlcjogJGNvbG9yLXByaW1hcnk7XG4iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVVRJTElUSUVTXG4vL1xuLy8gSGVscGVyIHV0aWxpdHkgc3R5bGVzIGZvciBhZGp1c3RpbmcgbWFyZ2luLCBwYWRkaW5nLCBldGMuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5AaW1wb3J0IFwiYW5pbWF0aW9uc1wiO1xuQGltcG9ydCBcImJvcmRlclwiO1xuQGltcG9ydCBcImRpc3BsYXlcIjtcbkBpbXBvcnQgXCJzaGFkb3dzXCI7XG5cbi50cnVuY2F0ZSB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcFxufSIsIi5uYXZiYXIge1xuICAgIGJhY2tncm91bmQ6ICMwMDc2RDY7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAmLW5hdiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIH1cblxuICAgICYtbmF2IGxpOmJlZm9yZSxcbiAgICAmLW5hdiBsaTphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IG5vbmU7XG4gICAgfVxuXG4gICAgJi1uYXYgPiBsaSB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxuXG4gICAgJi1uYXYgPiBsaTpudGgtY2hpbGQobisyKSxcbiAgICAmLW5hdiA+IGxpID4gdWwge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxuXG4gICAgJi1sZWZ0IHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYtcmlnaHQge1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIH1cblxuICAgIGEuYXV0aG9yIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDc1cHg7XG4gICAgfVxuXG4gICAgYSB7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBSb2JvdG8sXG4gICAgICAgICAgICAnSGVsdmV0aWNhIE5ldWUnLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgZm9udC1zaXplOiAwLjcyNXJlbTtcbiAgICAgICAgaGVpZ2h0OiA0NHB4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgb3BhY2l0eTogMC42NzU7XG4gICAgICAgIHBhZGRpbmc6IDAgMTVweDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgICAgICY6aG92ZXIsXG4gICAgICAgICY6Zm9jdXMge1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIENPTVBPTkVOVFMgPT4gUFJPSkVDVFMgTElTVFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLnByb2plY3RzLWxpc3Qge1xufSAvLyBlbmQgcHJvamVjdC1saXN0XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIFBST0pFQ1RTXG4ucHJvamVjdCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRyYW5zaXRpb246IDIwMG1zIGVhc2UtaW4tb3V0O1xuXG4gICAgJiA+IGEge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vICMjIFBST0pFQ1RTID0+IENMSUVOVFxuICAgICYtY2xpZW50IHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjU7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG5cbiAgICAgICAgJi1hdmF0YXIge1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgICAgICAgICB3aWR0aDogMzBweDtcbiAgICAgICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogOHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgJi1pbmZvIHtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjI1cHg7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAmLWluZm8tdG9wIHtcbiAgICAgICAgICAgIGNvbG9yOiAjNTk1OTU5O1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICB9XG5cbiAgICAgICAgJi1pbmZvLWJvdHRvbSB7XG4gICAgICAgICAgICBjb2xvcjogIzIyMjtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnVmVyZGFuYScsIHNhbnMtc2VyaWY7XG4gICAgICAgIH1cbiAgICB9IC8vIGVuZCAtY2xpZW50XG5cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vICMjIFBST0pFQ1RTID0+IElNQUdFXG4gICAgJi1pbWFnZS1jb250YWluZXIge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgNzUwbXMgY3ViaWMtYmV6aWVyKDAuODYsIDAsIDAuMDcsIDEpO1xuICAgICAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuODYsIDAsIDAuMDcsIDEpO1xuXG4gICAgICAgIGhlaWdodDogMTUwcHg7XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA0MTJweCkge1xuICAgICAgICAgICAgaGVpZ2h0OiAyMDBweDtcbiAgICAgICAgfVxuXG4gICAgICAgICYubGFyZ2Uge1xuICAgICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAzNTBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYtaW1hZ2Uge1xuICAgICAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItYWNjZW50O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40NSk7XG4gICAgICAgIHRyYW5zaXRpb246IGFsbCA2MDBtcyBjdWJpYy1iZXppZXIoMC44NiwgMCwgMC4wNywgMSk7XG4gICAgICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC44NiwgMCwgMC4wNywgMSk7XG4gICAgICAgIC8vIHRyYW5zaXRpb246IDMwMG1zIGVhc2UtaW4tb3V0O1xuXG4gICAgICAgICY6aG92ZXIsXG4gICAgICAgICY6Zm9jdXMge1xuICAgICAgICAgICAgLy8gYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMTBweCByZ2JhKDI1NSwyNTUsMjU1LC40NSk7XG4gICAgICAgICAgICAvLyB0cmFuc2Zvcm06IHNjYWxlKDEuMDUwKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYtaW1hZ2UtZnVsbHdpZHRoIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgdHJhbnNpdGlvbjogaW5pdGlhbDtcbiAgICB9XG5cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vICMjIFBST0pFQ1RTID0+IEhFQURFUlxuICAgICYtaGVhZGVyIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAgIH1cblxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gIyMgUFJPSkVDVFMgPT4gVEFHXG4gICAgJi1jYXRlZ29yeSB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIG1hcmdpbjogMCAwIDZweDtcbiAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjNTU1O1xuICAgICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgICAgICAgZm9udC1zaXplOiAxMHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAycHg7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgfVxuXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvLyAjIyBQUk9KRUNUUyA9PiBUSVRMRVxuICAgICYtdGl0bGUge1xuICAgICAgICAvLyBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yNTtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgbWFyZ2luOiAwIDAgOHB4O1xuXG4gICAgICAgICYgYSxcbiAgICAgICAgJiBhOmxpbmssXG4gICAgICAgICYgYTp2aXNpdGVkIHtcbiAgICAgICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogMzAwbXMgZWFzZTtcblxuICAgICAgICAgICAgJjpiZWZvcmUsXG4gICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBub25lO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmOmhvdmVyLFxuICAgICAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgICAgICAgICAgY29sb3I6IGNvbG9yKGFjY2VudCwgYmFzZSk7XG4gICAgICAgICAgICB9IC8vIGVuZCBob3ZlclxuICAgICAgICB9IC8vIGVuZCBhXG4gICAgfSAvLyBlbmQgLXRpdGxlXG5cbiAgICAmLW5hbWUge1xuICAgICAgICAvLyBjb2xvcjogIzU5NTk1OTtcbiAgICAgICAgZm9udDogbm9ybWFsIDE1cHgvMS40IHNhbnMtc2VyaWY7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICB9XG5cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vICMjIFBST0pFQ1RTID0+IEJPRFlcbiAgICAmLWJvZHkge1xuICAgICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMS40NTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgICAgICAmIGEsXG4gICAgICAgICYgYTpsaW5rLFxuICAgICAgICAmIGE6dmlzaXRlZCB7XG4gICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgcmlnaHQ6IDhweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICY6aG92ZXIsXG4gICAgICAgICAgICAmOmZvY3VzIHtcbiAgICAgICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IDhweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vICMjIFBST0pFQ1RTID0+IERFVEFJTFNcbiAgICAmLWRldGFpbHMge1xuICAgICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgIH1cblxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gIyMgUFJPSkVDVFMgPT4gQlVUVE9OXG4gICAgJi1idXR0b24ge1xuICAgICAgICBwYWRkaW5nOiAwIDIwcHggMCAyNHB4O1xuICAgIH1cblxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gIyMgUFJPSkVDVFMgPT4gRlVMTC1XSURUSCBJTkZPIFdSQVBQRVJcbiAgICAucHJvamVjdC1pbWFnZS1mdWxsd2lkdGgge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAvLyBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjc2NSk7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgICBib3R0b206IDA7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvLyAjIyBQUk9KRUNUUyA9PiBGVUxMLVdJRFRIIElORk8gTElHSFQgQkdcbiAgICAucHJvamVjdC1mdWxsd2lkdGgtaW5mby1saWdodC1iZyB7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45MjUpO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOTE1KTtcbiAgICB9XG59IC8vIGVuZCBwcm9qZWN0XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjIyBIT1ZFUlNcbi5wcm9qZWN0IHtcbiAgICAmOmhvdmVyLFxuICAgICY6Zm9jdXMge1xuICAgICAgICAvLyAmIC5wcm9qZWN0LWltYWdlIHtcbiAgICAgICAgLy8gICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDEwcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQ1KTtcbiAgICAgICAgLy8gICAgIC8vIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDEwcHggcmdiYSgwLDExOCwyMTQsLjM2NSk7IC8vIGFjY2VudFxuICAgICAgICAvLyB9XG5cbiAgICAgICAgJiAucHJvamVjdC1pbWFnZS1mdWxsd2lkdGgge1xuICAgICAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cbn0gLy8gZW5kIHByb2plY3QgaG92ZXJzXG4iLCJ0YWJsZTpub3QoLmpzLWZpbGUtbGluZS1jb250YWluZXIpIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgZm9udC1zaXplOiAwLjg3NWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjA0O1xuICAgIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsXG4gICAgICAgIFJvYm90bywgJ0hlbHZldGljYSBOZXVlJywgQXJpYWwsIHNhbnMtc2VyaWY7XG5cbiAgICAmICsgdGFibGUge1xuICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgIH1cblxuICAgIHRoIHtcbiAgICAgICAgcGFkZGluZzogMTZweCAxMnB4O1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICAgIGNvbG9yOiAjOTk5O1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIH1cblxuICAgIHRkIHtcbiAgICAgICAgcGFkZGluZzogMTZweCAxMnB4O1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAgIH1cblxuICAgIHRkID4gOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cblxuICAgIHRmb290IHtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cblxuICAgICYgPiB0cjpub3QoOmZpcnN0LWNoaWxkKSxcbiAgICAmID4gOm5vdCg6Zmlyc3QtY2hpbGQpID4gdHIsXG4gICAgJiA+IDpmaXJzdC1jaGlsZCA+IHRyOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNWU1ZTU7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk1OXB4KSB7XG4gICAgICAgIHRib2R5LFxuICAgICAgICB0aCxcbiAgICAgICAgdGQsXG4gICAgICAgIHRyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhlYWQge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoLFxuICAgICAgICB0ZCB7XG4gICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICAgICAgICAgIG1pbi13aWR0aDogMDtcbiAgICAgICAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgICAgICAgICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHRkOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiA1cHg7XG4gICAgICAgIH1cblxuICAgICAgICB0ZDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiA1cHg7XG4gICAgICAgIH1cblxuICAgICAgICB0aCxcbiAgICAgICAgdGQge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMDtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIi8qKlxuICogQG5hbWUgX2xpc3RcbiAqIEBzZWUgW1VJa2l0XXtAbGluayBodHRwczovL2dldHVpa2l0LmNvbS9kb2NzL2xpc3R9XG4gKi9cblxudWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZzogMDtcblxuICAgICYgPiBsaSB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogY2FsYygxLjVlbSArIDEwcHgpO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgfVxuXG4gICAgJiA+IGxpOmJlZm9yZSxcbiAgICAmID4gbGk6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgfVxuXG4gICAgJiA+IGxpOmJlZm9yZSB7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnZGF0YTppbWFnZS9zdmcreG1sO2NoYXJzZXQ9VVRGLTgsJTNDc3ZnJTIwd2lkdGglM0QlMjI2JTIyJTIwaGVpZ2h0JTNEJTIyNiUyMiUyMHZpZXdCb3glM0QlMjIwJTIwMCUyMDYlMjA2JTIyJTIweG1sbnMlM0QlMjJodHRwJTNBJTJGJTJGd3d3LnczLm9yZyUyRjIwMDAlMkZzdmclMjIlM0UlMEElMjAlMjAlMjAlMjAlM0NjaXJjbGUlMjBmaWxsJTNEJTIyJTIzNjY2JTIyJTIwY3glM0QlMjIzJTIyJTIwY3klM0QlMjIzJTIyJTIwciUzRCUyMjMlMjIlMjAlMkYlM0UlMEElM0MlMkZzdmclM0UnKTtcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBoZWlnaHQ6IDEuNWVtO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgd2lkdGg6IDEuNWVtO1xuICAgIH1cblxuICAgICYgPiBsaTphZnRlciB7XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cblxuICAgICYgPiBsaSA+IDpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG5cbiAgICAmIHVsIHtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7XG4gICAgfVxuXG4gICAgJiA+IGxpOm50aC1jaGlsZChuICsgMiksXG4gICAgJiA+IGxpID4gdWwge1xuICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIH1cbn1cbiIsIlxuLnRvYyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBmb250LWZhbWlseTogJ0xhdG8nLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbGVmdDogYXV0bztcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICBtYXJnaW46IDg0cHggMDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgdHJhbnNpdGlvbjogbWFyZ2luIDkwMG1zIGN1YmljLWJlemllciguMjUsLjgsLjI1LDEpOztcblxuICAgICYuc2Nyb2xsZWQge1xuICAgICAgICBtYXJnaW46IDI0cHggMDtcbiAgICB9XG5cbiAgICB1bCB7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgfVxuXG4gICAgdWwgdWwge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgfVxuXG4gICAgdWwgdWwgdWwge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gICAgfVxuXG4gICAgdWwgPiBsaSB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICB9XG5cbiAgICBcbiAgICB1bCA+IGxpOm50aC1jaGlsZChuKzIpLFxuICAgIHVsID4gbGkgPiB1bCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDRweFxuICAgIH1cbiAgICBcbiAgICBsaSB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgfVxuICAgIFxuICAgIGxpOmJlZm9yZSB7XG4gICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgfVxuICAgIFxuICAgIGEge1xuICAgICAgICBjb2xvcjogaW5pdGlhbDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgICAgICAmOmhvdmVyLCAmOmZvY3VzIHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuNjU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAudWstYWN0aXZlID4gYSB7XG4gICAgICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgIzAwNzZENjtcbiAgICAgICAgY29sb3I6ICMwMDc2RDY7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHdpZHRoOiAxOHZ3O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA5NjBweCkge1xuICAgICAgICB3aWR0aDogMjQuNzI1dnc7XG4gICAgfVxufVxuIiwiLy8gQ09OVEFJTkVSXG4vLyBAZm9ya2VkIGZyb20gaHR0cHM6Ly9nZXR1aWtpdC5jb20vZG9jcy9jb250YWluZXJcblxuLmNvbnRhaW5lciB7XG4gICAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgbWF4LXdpZHRoOiAxMzgwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgIHBhZGRpbmctbGVmdDozMHB4O1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA5NjBweCkge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6NDBweDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogNDBweDtcbiAgICB9XG5cbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgfVxuXG4gICAgJjphZnRlciB7XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cblxuICAgICYgPiA6bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDBcbiAgICB9XG5cbiAgICAmIC51ay1jb250YWluZXIge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDBcbiAgICB9XG59XG5cbi5wdXNoLWxlZnQge1xuICAgIG1heC13aWR0aDogMTAwdnc7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvIDAgMDtcbiAgICAgICAgbWF4LXdpZHRoOiA3MHZ3O1xuICAgIH1cbiAgICBcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogOTYwcHgpIHtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG8gMCAwO1xuICAgICAgICBtYXgtd2lkdGg6IDY1dnc7XG4gICAgfVxuICAgIFxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAgICAgbWFyZ2luOiAwIGNhbGMoNTB2dyAtIDIwdncpIDAgYXV0bztcbiAgICAgICAgbWF4LXdpZHRoOiA0NXZ3O1xuICAgIH1cbn1cbiIsIi5hcnRpY2xlIHtcbiAgICBtYXJnaW46IDQwcHggMDtcblxuICAgIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgICAgICBwYWRkaW5nLXRvcDogMjBweDtcbiAgICB9XG5cbiAgICBpbWcge1xuICAgICAgICBib3gtc2hhZG93OiAwIDE0cHggMjVweCByZ2JhKDAsIDAsIDAsIDAuMTYpO1xuICAgIH1cblxuICAgIGxpIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICB9XG5cbiAgICBsaSA+IHN0cm9uZyB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdMYXRvJywgJ1NlZ29lIFVJJyxcbiAgICAgICAgUm9ib3RvLCAnSGVsdmV0aWNhIE5ldWUnLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICB9XG5cbiAgICAuY2xpZW50LWJsb2NrIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG5cbiAgICAgICAgLmF2YXRhciB7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgaGVpZ2h0OiA2MHB4O1xuICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgICAgICAgIHdpZHRoOiA2MHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLm1ldGEge1xuICAgICAgICAgICAgZm9udDogbm9ybWFsIDEzcHgvMS40IHNhbnMtc2VyaWY7XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4wNjVweDtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jbGllbnQsXG4gICAgICAgIC5kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cblxuICAgICAgICAuY2xpZW50IHtcbiAgICAgICAgICAgIGNvbG9yOiAjMTExO1xuICAgICAgICB9XG5cbiAgICAgICAgLmRlc2NyaXB0aW9uIHtcbiAgICAgICAgICAgIGNvbG9yOiAjNTk1OTU5O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLmxlYWQge1xuICAgICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogLTAuODY1cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjM0NTQ7XG4gICAgICAgIG1hcmdpbjogMCAwIDIwcHg7XG4gICAgfVxuXG4gICAgLmRhdGUsXG4gICAgLmluZm8ge1xuICAgICAgICBjb2xvcjogIzc1NzU3NTtcbiAgICAgICAgZm9udDogbm9ybWFsIDAuNzVyZW0vMS40IHNhbnMtc2VyaWY7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjA2NXB4O1xuICAgICAgICBtYXJnaW46IDAgMCAxMHB4O1xuICAgIH1cblxuICAgIC5oZXJvIHtcbiAgICAgICAgY29sb3I6ICM1OTU5NTk7XG4gICAgICAgIGZvbnQ6IG5vcm1hbCAxNHB4LzEuMjUgc2Fucy1zZXJpZjtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMjY1cHg7XG4gICAgICAgIG1hcmdpbjogNDBweCBhdXRvO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICAgIC5maWd1cmUge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cblxuICAgICAgICAuaW1hZ2Uge1xuICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBub25lO1xuICAgICAgICAgICAgYm94LXNoYWRvdzogMCA1cHggMTVweCByZ2JhKDAsIDAsIDAsIDAuMDgpO1xuICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA5MHZ3O1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogMC4xcyBlYXNlLWluLW91dDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG5cbiAgICAgICAgLmNhcHRpb24ge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogOHB4O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLmNvbnRlbnQsXG4gICAgLmZvb3RlciB7XG4gICAgICAgIG1hcmdpbjogNDBweCBhdXRvO1xuICAgIH1cblxuICAgIC5zb3VyY2VzIHtcbiAgICAgICAgaDIge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgICAgIH1cblxuICAgICAgICBsaSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDAuODc1ZW07XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS4yNTtcbiAgICAgICAgfVxuXG4gICAgICAgIHVsID4gbGk6bnRoLWNoaWxkKG4rMikge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogNnB4O1xuICAgICAgICB9XG4gICAgfVxufVxuIl19 */
