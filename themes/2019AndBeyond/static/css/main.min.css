:root{--color-primary:#0076d6}code[class*=language-],pre[class*=language-]{color:#000;box-shadow:0 14px 25px rgba(0,0,0,.16);font-size:.875em;line-height:1.35}code[class*=language-]::-moz-selection,code[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection{background:#b3d4fc}code[class*=language-]::selection,code[class*=language-] ::selection,pre[class*=language-]::selection,pre[class*=language-] ::selection{background:#b3d4fc}pre[class*=language-]{padding:3em 2.5em 2em}:not(pre)>code[class*=language-],pre[class*=language-]{background:#f5f2f0}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#708090}.token.punctuation{color:#999}.namespace{opacity:.7}.token.boolean,.token.constant,.token.deleted,.token.number,.token.property,.token.symbol,.token.tag{color:#905}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#690}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url{color:#9a6e3a}.token.atrule,.token.attr-value,.token.keyword{color:#07a}.token.class-name,.token.function{color:#dd4a68}.token.important,.token.regex,.token.variable{color:#e90}pre[data-line]{position:relative;padding:1em 0 1em 3em}.line-highlight{position:absolute;left:0;right:0;padding:inherit 0;margin-top:1em;background:rgba(153,122,102,.08);background:linear-gradient(90deg,rgba(153,122,102,.1) 70%,rgba(153,122,102,0));pointer-events:none;line-height:inherit;white-space:pre}.line-highlight:before,.line-highlight[data-end]:after{content:attr(data-start);position:absolute;top:.4em;left:.6em;min-width:1em;padding:0 .5em;background-color:rgba(153,122,102,.4);color:#f5f2f0;font:700 65%/1.5 sans-serif;text-align:center;vertical-align:.3em;border-radius:999px;text-shadow:none;box-shadow:0 1px #fff}.line-highlight[data-end]:after{content:attr(data-end);top:auto;bottom:.4em}.line-numbers .line-highlight:after,.line-numbers .line-highlight:before{content:none}pre[class*=language-].line-numbers{position:relative;padding-left:3.8em;counter-reset:linenumber}pre[class*=language-].line-numbers>code{position:relative;white-space:inherit}.line-numbers .line-numbers-rows{border-right:1px solid #999}.line-numbers-rows>span:before{color:#999}.token a{color:inherit}div.code-toolbar{position:relative}div.code-toolbar>.toolbar{position:absolute;top:0;right:0;left:0;transition:opacity .3s ease-in-out;opacity:1;text-align:right;font-family:sans-serif;font-size:.675em;line-height:1}div.code-toolbar>.toolbar .toolbar-item{padding:.5em 1em}.language-css~.toolbar{background:#379ad6;color:#fff}.language-js~.toolbar{background:#eed817;color:#111}.language-scss~.toolbar{background:#c86195;color:#fff}.language-html~.toolbar{background:#ee6534;color:#fff}.language-go~.toolbar{background:#45699b;color:#fff}.language-php~.toolbar{background:#575788;color:#fff}div.code-toolbar>.toolbar a{cursor:pointer}div.code-toolbar>.toolbar button{background:none;border:0;color:inherit;font:inherit;line-height:normal;overflow:visible;padding:0}.command-line-prompt,div.code-toolbar>.toolbar button{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}.command-line-prompt{border-right:1px solid #999;display:block;float:left;font-size:100%;letter-spacing:-1px;margin-right:1em;pointer-events:none;user-select:none}.command-line-prompt>span:before{color:#999;content:" ";display:block;padding-right:.8em}.command-line-prompt>span[data-user]:before{content:"[" attr(data-user) "@" attr(data-host) "] $"}.command-line-prompt>span[data-user=root]:before{content:"[" attr(data-user) "@" attr(data-host) "] #"}.command-line-prompt>span[data-prompt]:before{content:attr(data-prompt)}code[class*=language-],pre[class*=language-]{color:#abb2bf;background:none;font-family:Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none}code[class*=language-]::-moz-selection,code[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection{text-shadow:none;background:#383e49}code[class*=language-]::selection,code[class*=language-] ::selection,pre[class*=language-]::selection,pre[class*=language-] ::selection{text-shadow:none;background:#9aa2b1}@media print{code[class*=language-],pre[class*=language-]{text-shadow:none}}pre[class*=language-]{overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background:#282c34}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#5c6370}.token.punctuation{color:#abb2bf}.token.selector,.token.tag{color:#e06c75}.token.attr-name,.token.boolean,.token.constant,.token.deleted,.token.number,.token.property,.token.symbol{color:#d19a66}.token.attr-value,.token.builtin,.token.char,.token.inserted,.token.string{color:#98c379}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url{color:#56b6c2}.token.atrule,.token.keyword{color:#c678dd}.token.function{color:#61afef}.token.important,.token.regex,.token.variable{color:#c678dd}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}pre.line-numbers{padding-left:3.8em;counter-reset:linenumber}pre.line-numbers,pre.line-numbers>code{position:relative}.line-numbers .line-numbers-rows{position:absolute;pointer-events:none;top:0;font-size:100%;left:-3.8em;width:3em;letter-spacing:-1px;border-right:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.line-numbers-rows>span{pointer-events:none;display:block;counter-increment:linenumber}.line-numbers-rows>span:before{content:counter(linenumber);color:#5c6370;display:block;padding-right:.8em;text-align:right}html{max-width:100vw;overflow-x:hidden}.uk-offcanvas-container,.uk-offcanvas-page{overflow:hidden}.uk-offcanvas-overlay:before{background:rgba(0,0,0,.75)}.noscroll{overflow-y:hidden!important}:root{font-size:16px}@media (min-width:400px) and (max-width:740px){:root{font-size:calc(16px + 3*(100vw - 400px)/340)}}@media (min-width:740px){:root{font-size:19px}}h1{font-size:26px}@media (min-width:400px) and (max-width:740px){h1{font-size:calc(26px + 20*(100vw - 400px)/340)}}@media (min-width:740px){h1{font-size:46px}}body{font-family:Georgia,Lora,Times New Roman,Times,serif;line-height:1.45em}@media screen and (min-width:22em){body{line-height:calc(.86957vw + 1.2587em)}}@media screen and (min-width:45em){body{line-height:1.65em}}address,dl,fieldset,figure,ol,p,pre,ul{margin:0 0 14px}@media (min-width:400px) and (max-width:740px){address,dl,fieldset,figure,ol,p,pre,ul{margin:0 0 calc(16px + 3*(100vw - 400px)/340)}}@media (min-width:740px){address,dl,fieldset,figure,ol,p,pre,ul{margin:0 0 32px}}*+address,*+dl,*+fieldset,*+figure,*+ol,*+p,*+pre,*+ul{margin-top:0}p:last-child{margin-bottom:0}::-moz-selection{background-color:color(accent,base)}::selection{background-color:color(accent,base)}h1,h2,h3,h4,h5,h6{font-family:-apple-system,BlinkMacSystemFont,Lato,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;font-weight:700;font-style:normal;line-height:1.04;letter-spacing:-.028em;padding:4px 0;margin-left:-2.5px;line-height:1.14em}@media screen and (min-width:22em){h1,h2,h3,h4,h5,h6{line-height:calc(.47826vw + 1.03478em)}}@media screen and (min-width:45em){h1,h2,h3,h4,h5,h6{line-height:1.25em}}h1,h2,h3,h4,h5,h6{margin:0 0 20px}*+h1,*+h2,*+h3,*+h4,*+h5,*+h6{margin-top:40px}.uk-sticky-fixed{margin:0 0 0 -2.5px!important}.uk-description-list>dt,.uk-description-list dd{font-family:sans-serif}.uk-description-list dd{color:#666;font-size:14px;font-weight:400;line-height:1.35;letter-spacing:.125px}.text-lead{font-family:-apple-system,BlinkMacSystemFont,Lato,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;font-size:1.5rem;font-weight:300;line-height:1.3454;letter-spacing:-.865px}.text-truncate{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}em{color:inherit}.uk-article-meta{color:#757575}pre{background:rgba(0,0,0,.05)}:not(pre)>code,:not(pre)>kbd,:not(pre)>samp{color:inherit;word-break:break-word;word-wrap:break-word;white-space:pre-wrap}blockquote{border-left:4px solid rgba(0,0,0,.8);font-size:1.05rem;font-style:italic;letter-spacing:.01rem;line-height:1.4625;margin-left:4px;opacity:.825;padding:0 0 2px 20px}@media (min-width:740px){blockquote{margin-left:0}}a,a:link,a:visited{text-decoration:underline;position:relative;transition:all .15s cubic-bezier(.86,0,.07,1);transition-timing-function:cubic-bezier(.86,0,.07,1)}a:focus,a:hover,a:link:focus,a:link:hover,a:visited:focus,a:visited:hover{color:#000;text-decoration:none}a.token,a:link.token,a:visited.token{color:inherit}.animation-delay-1 .elementor-row>.elementor-column:first-child{-webkit-animation-delay:.2s;animation-delay:.2s}.animation-delay-1 .elementor-row>.elementor-column:nth-child(2){-webkit-animation-delay:.4s;animation-delay:.4s}.animation-delay-2 .elementor-row>.elementor-column:first-child{-webkit-animation-delay:.2s;animation-delay:.2s}.animation-delay-2 .elementor-row>.elementor-column:nth-child(2){-webkit-animation-delay:.4s;animation-delay:.4s}.animation-delay-3 .elementor-row>.elementor-column:first-child{-webkit-animation-delay:.2s;animation-delay:.2s}.animation-delay-3 .elementor-row>.elementor-column:nth-child(2){-webkit-animation-delay:.4s;animation-delay:.4s}.animation-delay-3 .elementor-row>.elementor-column:nth-child(3){-webkit-animation-delay:.6s;animation-delay:.6s}.animation-delay-4 .elementor-row>.elementor-column:first-child{-webkit-animation-delay:.2s;animation-delay:.2s}.animation-delay-4 .elementor-row>.elementor-column:nth-child(2){-webkit-animation-delay:.4s;animation-delay:.4s}.animation-delay-4 .elementor-row>.elementor-column:nth-child(3){-webkit-animation-delay:.6s;animation-delay:.6s}.animation-delay-4 .elementor-row>.elementor-column:nth-child(4){-webkit-animation-delay:.8s;animation-delay:.8s}.pansky-border-muted{border:1px solid color(grey,light)}.wep-display-block{display:block!important}.wep-display-flex{display:flex!important}.fade-enter-active,.fade-leave-active{transition:opacity .5s}.fade-enter,.fade-leave-to{opacity:0}.caption-z-depth-1 img,.z-depth-1{box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);transition:all .3s cubic-bezier(.25,.8,.25,1)}.caption-z-depth-2 img,.z-depth-2{box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);transition:all .3s cubic-bezier(.25,.8,.25,1)}.caption-z-depth-3 img,.z-depth-3{box-shadow:0 10px 20px rgba(0,0,0,.19),0 6px 6px rgba(0,0,0,.23);transition:all .3s cubic-bezier(.25,.8,.25,1)}.caption-z-depth-4 img,.z-depth-4{box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22);transition:all .3s cubic-bezier(.25,.8,.25,1)}.caption-z-depth-5 img,.z-depth-5{box-shadow:0 19px 38px rgba(0,0,0,.3),0 15px 12px rgba(0,0,0,.22);transition:all .3s cubic-bezier(.25,.8,.25,1)}.caption-uk-box-shadow-small img{box-shadow:0 2px 8px rgba(0,0,0,.08)}.caption-uk-box-shadow-medium img{box-shadow:0 5px 15px rgba(0,0,0,.08)}.caption-uk-box-shadow-large img{box-shadow:0 14px 25px rgba(0,0,0,.16)}.caption-uk-box-shadow-xlarge img{box-shadow:0 28px 50px rgba(0,0,0,.16)}.wep-box-shadow-bottom{display:inline-block;position:relative;max-width:100%;vertical-align:middle}.wep-box-shadow-bottom:before{content:"";position:absolute;bottom:30px;left:10px;right:10px;height:30px;border-radius:100%;background:#999;-webkit-filter:blur(6px);filter:blur(6px)}.truncate{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.nav{display:flex;font-family:-apple-system,BlinkMacSystemFont,Lato,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;list-style-type:none}.nav,.nav>li,.nav>li:nth-child(n+2){margin:0;padding:0}.nav>li:after,.nav>li:before{content:none}.nav a{align-items:center;box-sizing:border-box;display:flex;font-size:.725rem;justify-content:center;padding:0 1.365em;text-decoration:none}.navbar{background:#0076d6;display:flex;font-family:-apple-system,BlinkMacSystemFont,Lato,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;position:relative}.navbar-nav li:after,.navbar-nav li:before{content:none}.navbar-nav>li{padding:0}.navbar-nav>li:nth-child(n+2),.navbar-nav>li>ul{margin:0}.navbar-left{width:100%;text-align:center}@media (min-width:640px){.navbar-left{width:auto;text-align:left}}.navbar-right{flex-wrap:wrap;margin-left:auto}.navbar a.author{font-size:1em;font-weight:700;letter-spacing:.075px}.navbar a{color:#fff;height:44px;opacity:.675}.navbar a:focus,.navbar a:hover{color:#fff;opacity:1}.project{position:relative;transition:.2s ease-in-out}.project-client{width:100%;font-size:12px;line-height:1.25;display:flex;flex-direction:row;align-items:flex-start;justify-content:flex-start;margin-bottom:16px}.project-client-avatar{border-radius:50%;background-size:cover;background-position:50%;width:30px;height:30px;flex:0 0 auto;align-self:flex-start;margin-right:8px}.project-client-info{letter-spacing:.25px;display:flex;flex-direction:column;align-items:flex-start;justify-content:center}.project-client-info-top{font-family:sans-serif;text-transform:uppercase}.project-client-info-bottom{font-family:Verdana,sans-serif}.project-image-container{box-shadow:0 1px 3px rgba(0,0,0,.025),0 1px 2px rgba(0,0,0,.1);margin-bottom:.40625em;overflow:hidden;transition:all .3s cubic-bezier(.25,.8,.25,1);height:150px}@media (min-width:412px){.project-image-container{height:200px}}@media (min-width:640px){.project-image-container.large{height:350px}}.project-image{background-position:50% 50%;background-repeat:no-repeat;background-size:cover;box-shadow:inset 0 0 0 0 hsla(0,0%,100%,.45);height:100%;transition-timing-function:cubic-bezier(.86,0,.07,1);transition:all .15s cubic-bezier(.86,0,.07,1);width:100%}.project-image-fullwidth{background-color:#fff;box-shadow:none;transition:initial}.project-header{margin-bottom:8px}.project-category{padding:0;margin:0 0 .25em;font-family:sans-serif;font-size:10px;line-height:1;display:inline-block;letter-spacing:1px;text-transform:uppercase;max-width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.project-title{font-weight:500;font-size:18px;line-height:1.25;padding:0;margin:0 0 .5em}.project-title a,.project-title a:link,.project-title a:visited{text-decoration:none;transition:.3s ease}.project-title a:after,.project-title a:before,.project-title a:link:after,.project-title a:link:before,.project-title a:visited:after,.project-title a:visited:before{content:none}.project-name{font:normal 15px/1.4 sans-serif;margin:0}.project-body{font-family:Georgia,Lora,Times New Roman,Times,serif;font-weight:400;font-size:14px;line-height:1.45;margin-bottom:.75em;overflow:hidden}.project-body a:before,.project-body a:focus:after,.project-body a:hover:after,.project-body a:link:before,.project-body a:link:focus:after,.project-body a:link:hover:after,.project-body a:visited:before,.project-body a:visited:focus:after,.project-body a:visited:hover:after{right:8px}.project-details{font-family:sans-serif;font-size:12px;line-height:1.25}.project-details strong{display:block}.project-button{padding:0 20px 0 24px}.project .project-image-fullwidth{position:relative}.project .project-image-fullwidth:after{background-color:hsla(0,0%,100%,.765);width:100%;min-width:100%;max-width:100%;height:100%;min-height:100%;max-height:100%;position:absolute;top:0;right:0;bottom:0;left:0}@media (min-width:640px){.project .project-image-fullwidth:after{content:none}}.project .project-fullwidth-info-light-bg{background:hsla(0,0%,100%,.925);border:1px solid hsla(0,0%,100%,.915)}.project hr{box-sizing:content-box;height:0;overflow:visible;text-align:inherit;margin:.5em 0;border:0;border-top:1px solid transparent}.project>a{color:initial;display:block;text-decoration:none}.project>a:focus .project-image-container,.project>a:hover .project-image-container{box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22)}.project>a:focus .project-title,.project>a:hover .project-title{color:#000}table:not(.js-file-line-container){border-collapse:collapse;border-spacing:0;width:100%;margin-bottom:20px;font-size:.875em;line-height:1.04;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif}table:not(.js-file-line-container)+table{margin-top:20px}table:not(.js-file-line-container) th{padding:16px 12px;text-align:left;vertical-align:bottom;font-size:12px;font-weight:400;color:#999;text-transform:uppercase}table:not(.js-file-line-container) td{padding:16px 12px;vertical-align:top}table:not(.js-file-line-container) td>:last-child{margin-bottom:0}table:not(.js-file-line-container) tfoot{font-size:14px}table:not(.js-file-line-container)>:first-child>tr:not(:first-child),table:not(.js-file-line-container)>:not(:first-child)>tr,table:not(.js-file-line-container)>tr:not(:first-child){border-top:1px solid #e5e5e5}@media (max-width:959px){table:not(.js-file-line-container) tbody,table:not(.js-file-line-container) td,table:not(.js-file-line-container) th,table:not(.js-file-line-container) tr{display:block}table:not(.js-file-line-container) thead{display:none}table:not(.js-file-line-container) td,table:not(.js-file-line-container) th{width:auto;max-width:none;min-width:0;overflow:visible;white-space:normal}table:not(.js-file-line-container) td:not(:first-child){padding-top:5px}table:not(.js-file-line-container) td:not(:last-child){padding-bottom:5px}table:not(.js-file-line-container) td,table:not(.js-file-line-container) th{padding-left:0;padding-right:0}}ul{list-style:none;padding:0}ul>li{padding-left:calc(1.5em + 10px);position:relative}ul>li:after,ul>li:before{content:"";display:table}ul>li:before{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='6' height='6' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle fill='%23666' cx='3' cy='3' r='3'/%3E%3C/svg%3E");background-position:50% 50%;background-repeat:no-repeat;content:"";display:block;height:1.5em;left:0;position:absolute;top:0;width:1.5em}ul>li:after{clear:both}ul>li>:last-child{margin-bottom:0}ul ul{list-style:none;margin:0;padding-left:30px}ul>li:nth-child(n+2),ul>li>ul{margin-top:10px}.toc{display:none;font-family:Lato,sans-serif;font-size:.75rem;height:100%;left:auto;line-height:1.5;position:fixed;margin:84px 0;right:0;top:0;transition:margin .9s cubic-bezier(.25,.8,.25,1)}.toc.scrolled{margin:24px 0}.toc ul{list-style:none}.toc ul ul{padding-left:0}.toc ul ul ul{padding-left:20px}.toc ul>li{padding-left:0}.toc ul>li:nth-child(n+2),.toc ul>li>ul{margin-top:4px}.toc li{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.toc li:before{background:none}.toc a{color:initial;display:block;text-decoration:none}.toc a:focus,.toc a:hover{opacity:.65}.toc .uk-active>a{border-left:2px solid #0076d6;color:#0076d6;padding-left:10px}@media (min-width:768px){.toc{display:block;width:18vw}}@media (min-width:960px){.toc{width:24.725vw}}.container{box-sizing:content-box;max-width:1380px;margin-left:auto;margin-right:auto;padding-left:15px;padding-right:15px}@media (min-width:640px){.container{padding-left:30px;padding-right:30px}}@media (min-width:960px){.container{padding-left:40px;padding-right:40px}}.container.xsmall{max-width:640px}.container.small{max-width:900px}.container:after,.container:before{content:"";display:table}.container:after{clear:both}.container>:last-child{margin-bottom:0}.container .uk-container{padding-left:0;padding-right:0}.push-left{max-width:100vw;margin:0 auto}@media (min-width:768px){.push-left{margin:0 auto 0 0;max-width:70vw}}@media (min-width:960px){.push-left{margin:0 auto 0 0;max-width:65vw}}@media (min-width:1200px){.push-left{margin:0 30vw 0 auto;max-width:45vw}}.section{box-sizing:border-box;padding-top:40px;padding-bottom:40px}@media (min-width:960px){.section{padding-top:70px;padding-bottom:70px}}.section.small{padding-top:40px;padding-bottom:40px}.section:after,.section:before{content:""}.section:after{clear:both}footer .container:after,footer .container:before,footer.section:after,footer.section:before{content:none}.pansky-social li{padding:0}.pansky-social a{padding:24px}main>footer>*{display:flex;flex-flow:column nowrap;align-items:center}@media (min-width:768px){main>footer>*{flex-flow:row nowrap;justify-content:space-between}}main>footer>* p{font-family:-apple-system,BlinkMacSystemFont,Lato,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;font-size:.675em;line-height:1.25;margin:0}.grid{display:grid;grid-template-rows:repeat(1,auto);grid-gap:4em 1em}@media (min-width:768px){.grid{grid-template-rows:repeat(2,auto);grid-template-columns:repeat(2,1fr)}}@media (min-width:960px){.grid{grid-template-columns:repeat(3,1fr);grid-template-areas:"featured featured"}}@media (min-width:960px){.grid-item:first-child{grid-area:featured}.grid-item:first-child .project-image-container{height:350px}}.intro{text-align:left}.intro .nav{margin-left:-.875em}@media (min-width:960px){.intro{text-align:center}.intro .nav{justify-content:center;margin:0}}.intro .me{font-size:2.625rem;line-height:1.2}@media (min-width:960px){.intro .me{font-size:3.75rem;line-height:1.1}}.resume .entry-header{margin-bottom:1rem}.resume .entry-title{font-size:1.25em;margin-bottom:1rem;padding:0}.resume .entry-employer{width:100%;font-size:12px;line-height:1.25;display:flex;flex-direction:row;align-items:flex-start;justify-content:flex-start;margin-bottom:1rem}.resume .entry-employer-logo{border-radius:50%;background-size:cover;background-position:50%;width:50px;height:50px;flex:0 0 auto;align-self:flex-start;margin-right:8px}.resume .entry-employer-info{letter-spacing:.25px;display:flex;flex-direction:column;align-items:flex-start;justify-content:center;height:47px}.resume .entry-employer-info-top{font-family:-apple-system,BlinkMacSystemFont,Lato,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif}.resume .entry-employer-info-bottom{color:#222;font-family:Verdana,sans-serif}.resume .entry-employer-name{font-size:1.15em}.resume .entry-employer-details,.resume .entry-employer-details p,.resume .entry-employer-name{font-family:-apple-system,BlinkMacSystemFont,Lato,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;margin:0;padding:0}.resume .entry-employer-details,.resume .entry-employer-details p{font-size:.85em;line-height:1.25}.resume .entry-body ul{font-size:.875rem;line-height:1.425;margin:0}.resume .entry-body ul>li:before{height:1.3425em}.resume .entry+.entry{border-top:1px solid #bfbfbf;margin-top:50px;padding-top:50px}.resume .entry-sublist li{position:relative}.resume .entry-sublist li:before{content:"";position:absolute;top:10px;left:-20px;width:10px;border-top:1px solid #bfbfbf}.wep-resume h4{margin:0 auto 4px}.wep-resume p{font-family:sans-serif;font-size:.75rem;line-height:1.5;margin:0 auto}.wep-resume>ul{list-style-type:none;padding:0;margin-top:1.5rem}.wep-resume li{font-size:.875rem;line-height:1.5;border-bottom:1px solid #ddd;padding:0 0 .5rem;margin:0 auto .5rem}.wep-resume li:last-child{border-bottom:0}.article{margin:40px 0}.article h1,.article h2,.article h3,.article h4,.article h5,.article h6{margin-top:20px;padding-top:20px}.article img{box-shadow:0 14px 25px rgba(0,0,0,.16)}.article li{line-height:1.5}.article li>strong{font-family:-apple-system,BlinkMacSystemFont,Lato,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif}.article .client-block{display:flex;flex-flow:row nowrap;align-items:center;justify-content:flex-start}.article .client-block .avatar{border-radius:100%;box-shadow:none;display:block;height:60px;vertical-align:middle;width:60px}.article .client-block .meta{font:normal 13px/1.4 sans-serif;letter-spacing:.065px;padding-left:15px}.article .client-block .client,.article .client-block .description{margin:0}.article .client-block .client{color:#111}.article .client-block .description{color:#595959}.article .lead{font-family:sans-serif;color:#333;font-size:1.5rem;font-weight:300;letter-spacing:-.865px;line-height:1.3454;margin:0 0 20px}.article .date,.article .info{color:#757575;font:normal .75rem/1.4 sans-serif;letter-spacing:.065px;margin:0 0 10px}.article .hero{color:#595959;font:normal 14px/1.25 sans-serif;letter-spacing:.265px;margin:40px auto;padding:0;text-align:center;width:100%}.article .hero .figure{display:block;margin:0}.article .hero .image{border-style:none;box-shadow:0 5px 15px rgba(0,0,0,.08);margin:auto;max-width:90vw;-webkit-transform:translateX(0);transform:translateX(0);transition:.1s ease-in-out;width:100%}.article .hero .caption{margin-top:8px}.article .content,.article .footer{margin:40px auto}.article .sources h2{font-size:1em;margin-bottom:8px}.article .sources li{font-size:.875em;line-height:1.25}.article .sources ul>li:nth-child(n+2){margin-top:6px}body{background-color:#fafafa;color:rgba(0,0,0,.695)}h1,h2,h3,h4,h5,h6,strong{color:rgba(0,0,0,.825)}a,a:link,a:visited{color:#0076d6}.navbar a,.navbar a:link,.navbar a:visited{color:#fff}.project a{color:inherit}.project-title{color:#0076d6}.project-body{color:rgba(0,0,0,.695)}.project-category,.project-details{color:rgba(0,0,0,.515)}.project hr{border-color:#dcdcdc}.toc a{color:inherit}.one-dark{background:#282c34;color:#abb2bf}.one-dark h1,.one-dark h2,.one-dark h3,.one-dark h4,.one-dark h5,.one-dark h6{color:#fff}.one-dark a,.one-dark a:link,.one-dark a:visited{color:#e6c07b}.one-dark .project a{color:inherit}.one-dark .project-title{color:#e6c07b}.one-dark .project-body{color:#f8f8f8}.one-dark .project-category,.one-dark .project-details{color:#818896}.one-dark .project hr{border-color:#5c6370}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
